
Analyzing function: Clock_Ip_EnableSpll_TrustedCall.part.0/18
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 4 2 3
;; 4 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 1 }

Analyzing function body size: Clock_Ip_EnableSpll_TrustedCall.part.0

IPA function summary for Clock_Ip_EnableSpll_TrustedCall.part.0/18 inlinable
  global time:     5.000000
  self size:       6
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Clock_Ip_SetSpll_TrustedCall.part.0/17
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 7 2 3 4 5 6
;; 7 succs { 2 }
;; 2 succs { 6 3 4 5 }
;; 3 succs { 6 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }

Analyzing function body size: Clock_Ip_SetSpll_TrustedCall.part.0

IPA function summary for Clock_Ip_SetSpll_TrustedCall.part.0/17 inlinable
  global time:     19.750000
  self size:       27
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 104] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 104] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 128] changed) && (not inlined)
    size:3.500000, time:3.500000,  nonconst if:(op0[ref offset: 128] changed)
    size:1.000000, time:1.000000,  nonconst if:(op0[ref offset: 104] changed || op0[ref offset: 128] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 216] changed) && (not inlined)
    size:8.500000, time:4.500000,  nonconst if:(op0[ref offset: 216] changed)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 216] == 2)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 216] == 1)
    size:1.000000, time:0.250000,  executed if:(op0[ref offset: 216] == 0)
  calls:


Analyzing function: Clock_Ip_CompleteSpll.part.0/16
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 9 2 3 4 5 6 7 8
;;
;; Loop 1
;;  header 3, latch 5
;;  depth 1, outer 0
;;  nodes: 3 5 4
;; 9 succs { 2 }
;; 2 succs { 3 }
;; 3 succs { 4 6 }
;; 4 succs { 5 6 }
;; 5 succs { 3 }
;; 6 succs { 8 7 }
;; 7 succs { 8 }
;; 8 succs { 1 }

Analyzing function body size: Clock_Ip_CompleteSpll.part.0

IPA function summary for Clock_Ip_CompleteSpll.part.0/16 inlinable
  global time:     228.359649
  self size:       26
  global size:     0
  min size:       0
  self stack:      12
  global stack:    12
    size:10.000000, time:75.755550
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_StartTimeout/13 function body not available
      loop depth: 0 freq:1.00 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Clock_Ip_TimeoutExpired/14 function body not available
      loop depth: 1 freq:9.35 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
    Clock_Ip_ReportClockErrors/15 function body not available
      loop depth: 0 freq:0.48 size: 3 time: 12
       op0 is compile time invariant


Analyzing function: Clock_Ip_EnableSpll_TrustedCall/11
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: Clock_Ip_EnableSpll_TrustedCall

IPA function summary for Clock_Ip_EnableSpll_TrustedCall/11 inlinable
  global time:     8.400000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    Clock_Ip_EnableSpll_TrustedCall.part.0/18 function not considered for inlining
      loop depth: 0 freq:0.34 size: 1 time: 10callee size: 3 stack: 0 predicate: (op0[ref offset: 32] == 1)


Analyzing function: Clock_Ip_DisableSpll_TrustedCall/10
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_DisableSpll_TrustedCall

IPA function summary for Clock_Ip_DisableSpll_TrustedCall/10 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:6.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Clock_Ip_SetSpll_TrustedCall/9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: Clock_Ip_SetSpll_TrustedCall

IPA function summary for Clock_Ip_SetSpll_TrustedCall/9 inlinable
  global time:     8.740000
  self size:       8
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 32] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 32] changed)
  calls:
    Clock_Ip_SetSpll_TrustedCall.part.0/17 function not considered for inlining
      loop depth: 0 freq:0.34 size: 2 time: 11callee size:13 stack: 0 predicate: (op0[ref offset: 32] == 1)


Analyzing function: Clock_Ip_ResetSpll_TrustedCall/8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_ResetSpll_TrustedCall

IPA function summary for Clock_Ip_ResetSpll_TrustedCall/8 inlinable
  global time:     20.000000
  self size:       21
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:18.000000, time:18.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Clock_Ip_EnableSpll/7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_EnableSpll

IPA function summary for Clock_Ip_EnableSpll/7 inlinable
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_EnableSpll_TrustedCall/11 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 3 stack: 0


Analyzing function: Clock_Ip_DisableSpll/6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_DisableSpll

IPA function summary for Clock_Ip_DisableSpll/6 inlinable
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_DisableSpll_TrustedCall/10 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0


Analyzing function: Clock_Ip_CompleteSpll/5
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: Clock_Ip_CompleteSpll

IPA function summary for Clock_Ip_CompleteSpll/5 inlinable
  global time:     9.960000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_CompleteSpll.part.0/16 function not considered for inlining
      loop depth: 0 freq:0.33 size: 3 time: 12callee size:13 stack:12


Analyzing function: Clock_Ip_SetSpll/4
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_SetSpll

IPA function summary for Clock_Ip_SetSpll/4 inlinable
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_SetSpll_TrustedCall/9 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size: 4 stack: 0


Analyzing function: Clock_Ip_ResetSpll/3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_ResetSpll

IPA function summary for Clock_Ip_ResetSpll/3 inlinable
  global time:     13.000000
  self size:       5
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Clock_Ip_ResetSpll_TrustedCall/8 function not considered for inlining
      loop depth: 0 freq:1.00 size: 2 time: 11callee size:10 stack: 0


Analyzing function: Clock_Ip_CallbackPllEmptyDisable/2
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_CallbackPllEmptyDisable

IPA function summary for Clock_Ip_CallbackPllEmptyDisable/2 inlinable
  global time:     2.000000
  self size:       3
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Clock_Ip_CallbackPllEmptyComplete/1
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_CallbackPllEmptyComplete

IPA function summary for Clock_Ip_CallbackPllEmptyComplete/1 inlinable
  global time:     2.000000
  self size:       3
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Clock_Ip_CallbackPllEmpty/0
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_CallbackPllEmpty

IPA function summary for Clock_Ip_CallbackPllEmpty/0 inlinable
  global time:     2.000000
  self size:       3
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

Clock_Ip_EnableSpll_TrustedCall.part.0/18 (Clock_Ip_EnableSpll_TrustedCall.part.0) @069e2d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Clock_Ip_EnableSpll_TrustedCall/11 (365072224 (estimated locally),0.34 per call) 
  Calls: 
Clock_Ip_SetSpll_TrustedCall.part.0/17 (Clock_Ip_SetSpll_TrustedCall.part.0) @069e2620
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Clock_Ip_SetSpll_TrustedCall/9 (365072224 (estimated locally),0.34 per call) 
  Calls: 
Clock_Ip_CompleteSpll.part.0/16 (Clock_Ip_CompleteSpll.part.0) @069e20e0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: 
  Availability: local
  Function flags: count:114863532 (estimated locally) first_run:1 body local split_part optimize_size
  Called by: Clock_Ip_CompleteSpll/5 (114863531 (estimated locally),0.33 per call) 
  Calls: Clock_Ip_StartTimeout/13 (114863532 (estimated locally),1.00 per call) Clock_Ip_TimeoutExpired/14 (1073741824 (estimated locally),9.35 per call) Clock_Ip_ReportClockErrors/15 (54870309 (estimated locally),0.48 per call) 
Clock_Ip_ReportClockErrors/15 (Clock_Ip_ReportClockErrors) @069c1000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_CompleteSpll.part.0/16 (54870309 (estimated locally),0.48 per call) 
  Calls: 
Clock_Ip_TimeoutExpired/14 (Clock_Ip_TimeoutExpired) @06972d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_CompleteSpll.part.0/16 (1073741824 (estimated locally),9.35 per call) 
  Calls: 
Clock_Ip_StartTimeout/13 (Clock_Ip_StartTimeout) @069722a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_CompleteSpll.part.0/16 (114863532 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_axPllCallbacks/12 (Clock_Ip_axPllCallbacks) @06a4cee8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_CallbackPllEmpty/0 (addr)Clock_Ip_CallbackPllEmpty/0 (addr)Clock_Ip_CallbackPllEmptyComplete/1 (addr)Clock_Ip_CallbackPllEmpty/0 (addr)Clock_Ip_CallbackPllEmptyDisable/2 (addr)Clock_Ip_ResetSpll/3 (addr)Clock_Ip_SetSpll/4 (addr)Clock_Ip_CompleteSpll/5 (addr)Clock_Ip_EnableSpll/7 (addr)Clock_Ip_DisableSpll/6 (addr)
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_EnableSpll_TrustedCall/11 (Clock_Ip_EnableSpll_TrustedCall) @06972540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_EnableSpll/7 (1073741824 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_EnableSpll_TrustedCall.part.0/18 (365072224 (estimated locally),0.34 per call) 
Clock_Ip_DisableSpll_TrustedCall/10 (Clock_Ip_DisableSpll_TrustedCall) @069721c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_DisableSpll/6 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_SetSpll_TrustedCall/9 (Clock_Ip_SetSpll_TrustedCall) @0696dd20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_SetSpll/4 (1073741824 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_SetSpll_TrustedCall.part.0/17 (365072224 (estimated locally),0.34 per call) 
Clock_Ip_ResetSpll_TrustedCall/8 (Clock_Ip_ResetSpll_TrustedCall) @0696dc40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Clock_Ip_ResetSpll/3 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Clock_Ip_EnableSpll/7 (Clock_Ip_EnableSpll) @0696d9a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_EnableSpll_TrustedCall/11 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_DisableSpll/6 (Clock_Ip_DisableSpll) @0696d700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_DisableSpll_TrustedCall/10 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_CompleteSpll/5 (Clock_Ip_CompleteSpll) @0696d460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr)
  Availability: available
  Function flags: count:348071309 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_CompleteSpll.part.0/16 (114863531 (estimated locally),0.33 per call) 
Clock_Ip_SetSpll/4 (Clock_Ip_SetSpll) @0696d1c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_SetSpll_TrustedCall/9 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_ResetSpll/3 (Clock_Ip_ResetSpll) @06969e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_ResetSpll_TrustedCall/8 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_CallbackPllEmptyDisable/2 (Clock_Ip_CallbackPllEmptyDisable) @069698c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_CallbackPllEmptyComplete/1 (Clock_Ip_CallbackPllEmptyComplete) @06969d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_CallbackPllEmpty/0 (Clock_Ip_CallbackPllEmpty) @06969a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axPllCallbacks/12 (addr)Clock_Ip_axPllCallbacks/12 (addr)Clock_Ip_axPllCallbacks/12 (addr)
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_EnableSpll_TrustedCall.part.0 ()
{
  const struct Clock_Ip_PllConfigType * Config;
  long unsigned int _1;
  long unsigned int _2;

  <bb 4> [local count: 1073741824]:
  # DEBUG D#2 s=> Config
  # DEBUG Config => D#2

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _2 = _1 | 1;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _2;

  <bb 3> [local count: 1073741824]:
  return;

}


Clock_Ip_SetSpll_TrustedCall.part.0 (const struct Clock_Ip_PllConfigType * Config)
{
  long unsigned int _1;
  unsigned char _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  unsigned char _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  unsigned char _15;

  <bb 7> [local count: 1073741824]:

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCFG;
  _3 = Config_2(D)->Predivider;
  _4 = (long unsigned int) _3;
  _5 = _4 + 4294967295;
  _6 = _5 << 8;
  _7 = _6 & 1792;
  _8 = Config_2(D)->MulFactorDiv;
  _9 = (long unsigned int) _8;
  _10 = _9 + 4294967280;
  _11 = _10 << 16;
  _12 = _11 & 2031616;
  _13 = _7 | _12;
  _14 = _1 | _13;
  MEM[(struct SCG_Type *)1074151424B].SPLLCFG ={v} _14;
  # DEBUG BEGIN_STMT
  _15 = Config_2(D)->Monitor;
  switch (_15) <default: <L3> [25.00%], case 0: <L0> [25.00%], case 1: <L1> [25.00%], case 2: <L2> [25.00%]>

  <bb 3> [local count: 268435456]:
<L0>:
  # DEBUG BEGIN_STMT
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} 0;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 4> [local count: 268435456]:
<L1>:
  # DEBUG BEGIN_STMT
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} 65536;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 268435456]:
<L2>:
  # DEBUG BEGIN_STMT
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} 196608;
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
<L3>:
  return;

}


Clock_Ip_CompleteSpll.part.0 (Clock_Ip_NameType PllName)
{
  Clock_Ip_PllStatusReturnType PllStatus;
  boolean TimeoutOccurred;
  uint32 StartTime;
  uint32 ElapsedTime;
  uint32 TimeoutTicks;
  uint32 SpllStatus;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int TimeoutTicks.0_4;

  <bb 9> [local count: 114863532]:

  <bb 2> [local count: 114863532]:
  # DEBUG BEGIN_STMT
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _2 = _1 >> 24;
  SpllStatus_3 = _2 & 1;
  # DEBUG SpllStatus => SpllStatus_3
  # DEBUG BEGIN_STMT
  TimeoutTicks.0_4 = TimeoutTicks;
  TimeoutOccurred_5 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_4);
  # DEBUG TimeoutOccurred => TimeoutOccurred_5
  # DEBUG BEGIN_STMT
  if (SpllStatus_3 == 0)
    goto <bb 4>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 4> [local count: 1014686025]:
  if (TimeoutOccurred_5 != 0)
    goto <bb 6>; [5.50%]
  else
    goto <bb 5>; [94.50%]

  <bb 5> [local count: 958878293]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 114863532]:
  # TimeoutOccurred_6 = PHI <TimeoutOccurred_5(3), TimeoutOccurred_5(4)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_6 != 0)
    goto <bb 7>; [47.77%]
  else
    goto <bb 8>; [52.23%]

  <bb 7> [local count: 54870309]:
  # DEBUG BEGIN_STMT
  Clock_Ip_ReportClockErrors (1, PllName_7(D));

  <bb 8> [local count: 114863532]:
  # PllStatus_8 = PHI <2(6), 1(7)>
  # DEBUG PllStatus => PllStatus_8
  # DEBUG BEGIN_STMT
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return PllStatus_8;

}


Clock_Ip_EnableSpll_TrustedCall (const struct Clock_Ip_PllConfigType * Config)
{
  short unsigned int _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = Config_5(D)->Enable;
  if (_1 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  # DEBUG D#1 => Config_5(D)
  Clock_Ip_EnableSpll_TrustedCall.part.0 ();

  <bb 4> [local count: 1073741824]:
  return;

}


Clock_Ip_DisableSpll_TrustedCall (Clock_Ip_NameType PllName)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _2 = _1 & 4286578687;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _2;
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _4 = _3 & 4294967294;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _4;
  return;

}


Clock_Ip_SetSpll_TrustedCall (const struct Clock_Ip_PllConfigType * Config)
{
  short unsigned int _1;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = Config_5(D)->Enable;
  if (_1 == 1)
    goto <bb 3>; [34.00%]
  else
    goto <bb 4>; [66.00%]

  <bb 3> [local count: 365072224]:
  Clock_Ip_SetSpll_TrustedCall.part.0 (Config_5(D));

  <bb 4> [local count: 1073741824]:
<L7>:
  return;

}


Clock_Ip_ResetSpll_TrustedCall (const struct Clock_Ip_PllConfigType * Config)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _2 = _1 & 4286578687;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _2;
  # DEBUG BEGIN_STMT
  _3 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _4 = _3 & 4294901759;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _4;
  # DEBUG BEGIN_STMT
  _5 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _6 = _5 & 4294836223;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _6;
  # DEBUG BEGIN_STMT
  _7 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _8 = _7 & 4294967294;
  MEM[(struct SCG_Type *)1074151424B].SPLLCSR ={v} _8;
  # DEBUG BEGIN_STMT
  _9 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCFG;
  _10 = _9 & 4294965503;
  MEM[(struct SCG_Type *)1074151424B].SPLLCFG ={v} _10;
  # DEBUG BEGIN_STMT
  _11 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCFG;
  _12 = _11 & 4292935679;
  MEM[(struct SCG_Type *)1074151424B].SPLLCFG ={v} _12;
  return;

}


Clock_Ip_EnableSpll (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_EnableSpll_TrustedCall (Config_2(D));
  return;

}


Clock_Ip_DisableSpll (Clock_Ip_NameType PllName)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_DisableSpll_TrustedCall (PllName_2(D));
  return;

}


Clock_Ip_CompleteSpll (Clock_Ip_NameType PllName)
{
  Clock_Ip_PllStatusReturnType PllStatus;
  long unsigned int _1;
  long unsigned int _2;

  <bb 2> [local count: 348071309]:
  # DEBUG BEGIN_STMT
  # DEBUG PllStatus => 1
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(struct SCG_Type *)1074151424B].SPLLCSR;
  _2 = _1 & 1;
  if (_2 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 114863531]:
  PllStatus_4 = Clock_Ip_CompleteSpll.part.0 (PllName_8(D));

  <bb 4> [local count: 348071309]:
  # PllStatus_5 = PHI <PllStatus_4(3), 0(2)>
  # DEBUG PllStatus => PllStatus_5
  # DEBUG BEGIN_STMT
  return PllStatus_5;

}


Clock_Ip_SetSpll (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_SetSpll_TrustedCall (Config_2(D));
  return;

}


Clock_Ip_ResetSpll (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_ResetSpll_TrustedCall (Config_2(D));
  return;

}


Clock_Ip_CallbackPllEmptyDisable (Clock_Ip_NameType PllName)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


Clock_Ip_CallbackPllEmptyComplete (Clock_Ip_NameType PllName)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return 0;

}


Clock_Ip_CallbackPllEmpty (const struct Clock_Ip_PllConfigType * Config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


