IPA function summary for Power_Ip_PMC_PowerInit/0 inlinable
  global time:     17.000000
  self size:       18
  global size:     18
  min size:       0
  self stack:      0
  global stack:    0
    size:12.000000, time:12.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 8] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 8] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 16] changed)
  calls:


Flattening functions:
Overall time estimate: 17.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Power_Ip_PMC_PowerInit/0.

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 17.000000 weighted by profile: 0.000000

Why inlining failed?
IPA function summary for Power_Ip_PMC_PowerInit/0 inlinable
  global time:     17.000000
  self size:       18
  global size:     18
  min size:       0
  self stack:      0
  global stack:    0
    size:12.000000, time:12.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 8] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 8] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 16] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op0[ref offset: 16] changed)
  calls:

Symbol table:

Power_Ip_PMC_PowerInit/0 (Power_Ip_PMC_PowerInit) @0671f380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 

;; Function Power_Ip_PMC_PowerInit (Power_Ip_PMC_PowerInit, funcdef_no=0, decl_uid=5636, cgraph_uid=1, symbol_order=0)

Power_Ip_PMC_PowerInit (const struct Power_Ip_PMC_ConfigType * ConfigPtr)
{
  uint8 Tmp;
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Tmp_5 ={v} MEM[(struct PMC_Type *)1074253824B].LVDSC1;
  # DEBUG Tmp => Tmp_5
  # DEBUG BEGIN_STMT
  Tmp_6 = Tmp_5 & 15;
  # DEBUG Tmp => Tmp_6
  # DEBUG BEGIN_STMT
  _1 = ConfigPtr_7(D)->Lvdsc1;
  Tmp_8 = _1 | Tmp_6;
  # DEBUG Tmp => Tmp_8
  # DEBUG BEGIN_STMT
  MEM[(struct PMC_Type *)1074253824B].LVDSC1 ={v} Tmp_8;
  # DEBUG BEGIN_STMT
  Tmp_10 ={v} MEM[(struct PMC_Type *)1074253824B].LVDSC2;
  # DEBUG Tmp => Tmp_10
  # DEBUG BEGIN_STMT
  Tmp_11 = Tmp_10 & 31;
  # DEBUG Tmp => Tmp_11
  # DEBUG BEGIN_STMT
  _2 = ConfigPtr_7(D)->Lvdsc2;
  Tmp_12 = _2 | Tmp_11;
  # DEBUG Tmp => Tmp_12
  # DEBUG BEGIN_STMT
  MEM[(struct PMC_Type *)1074253824B].LVDSC2 ={v} Tmp_12;
  # DEBUG BEGIN_STMT
  Tmp_14 ={v} MEM[(struct PMC_Type *)1074253824B].REGSC;
  # DEBUG Tmp => Tmp_14
  # DEBUG BEGIN_STMT
  Tmp_15 = Tmp_14 & 56;
  # DEBUG Tmp => Tmp_15
  # DEBUG BEGIN_STMT
  _3 = ConfigPtr_7(D)->Regsc;
  Tmp_16 = _3 | Tmp_15;
  # DEBUG Tmp => Tmp_16
  # DEBUG BEGIN_STMT
  MEM[(struct PMC_Type *)1074253824B].REGSC ={v} Tmp_16;
  return;

}


