
Marking local functions: Port_Ci_Port_Ip_PinInit Port_Ci_Port_Ip_GetAdcInterleaveVal DevAssert


Marking externally visible functions: Port_Ci_Port_Ip_SetGlobalPinControl Port_Ci_Port_Ip_ConfigDigitalFilter Port_Ci_Port_Ip_DisableDigitalFilter Port_Ci_Port_Ip_EnableDigitalFilter Port_Ci_Port_Ip_SetMuxModeSel Port_Ci_Port_Ip_Init Port_Ci_Port_Ip_ConfigureInterleave


Marking externally visible variables: Port_au32PortCiGpioBaseAddr Port_au32PortCiPortBaseAddr


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

SchM_Exit_Port_PORT_EXCLUSIVE_AREA_08/29 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_08) @069987e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_DisableDigitalFilter/9 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_08/28 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_08) @06998700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_DisableDigitalFilter/9 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_07/27 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_07) @06998540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_EnableDigitalFilter/8 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_07/26 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_07) @06998460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_EnableDigitalFilter/8 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_06/25 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_06) @069982a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_SetMuxModeSel/7 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_06/24 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_06) @069981c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_SetMuxModeSel/7 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_04/23 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_04) @0698c620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_PinInit/5 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_04/22 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_04) @0698cee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_PinInit/5 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03/21 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03) @0698ce00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_PinInit/5 Port_Ci_Port_Ip_PinInit/5 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03/20 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03) @0698cd20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_PinInit/5 Port_Ci_Port_Ip_PinInit/5 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_02/19 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_02) @0698cc40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_PinInit/5 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_02/18 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_02) @0698cb60
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_PinInit/5 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_01/17 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_01) @0698ca80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_PinInit/5 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_01/16 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_01) @0698c9a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_PinInit/5 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_00/15 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_00) @0698c8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_PinInit/5 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_00/14 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_00) @0698c7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_PinInit/5 
  Calls: 
SchM_Exit_Port_PORT_EXCLUSIVE_AREA_05/13 (SchM_Exit_Port_PORT_EXCLUSIVE_AREA_05) @0698c2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_ConfigureInterleave/4 
  Calls: 
SchM_Enter_Port_PORT_EXCLUSIVE_AREA_05/12 (SchM_Enter_Port_PORT_EXCLUSIVE_AREA_05) @0698c1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Port_Ci_Port_Ip_ConfigureInterleave/4 
  Calls: 
Port_Ci_Port_Ip_SetGlobalPinControl/11 (Port_Ci_Port_Ip_SetGlobalPinControl) @06920540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: DevAssert/0 
Port_Ci_Port_Ip_ConfigDigitalFilter/10 (Port_Ci_Port_Ip_ConfigDigitalFilter) @06920ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: DevAssert/0 
Port_Ci_Port_Ip_DisableDigitalFilter/9 (Port_Ci_Port_Ip_DisableDigitalFilter) @069209a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SchM_Exit_Port_PORT_EXCLUSIVE_AREA_08/29 SchM_Enter_Port_PORT_EXCLUSIVE_AREA_08/28 DevAssert/0 
Port_Ci_Port_Ip_EnableDigitalFilter/8 (Port_Ci_Port_Ip_EnableDigitalFilter) @06920700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SchM_Exit_Port_PORT_EXCLUSIVE_AREA_07/27 SchM_Enter_Port_PORT_EXCLUSIVE_AREA_07/26 DevAssert/0 
Port_Ci_Port_Ip_SetMuxModeSel/7 (Port_Ci_Port_Ip_SetMuxModeSel) @06920460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: SchM_Exit_Port_PORT_EXCLUSIVE_AREA_06/25 SchM_Enter_Port_PORT_EXCLUSIVE_AREA_06/24 Port_Ci_Port_Ip_ConfigureInterleave/4 DevAssert/0 DevAssert/0 
Port_Ci_Port_Ip_Init/6 (Port_Ci_Port_Ip_Init) @06920000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: 
  Calls: Port_Ci_Port_Ip_PinInit/5 
Port_Ci_Port_Ip_PinInit/5 (Port_Ci_Port_Ip_PinInit) @06983540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Port_Ci_Port_Ip_Init/6 
  Calls: SchM_Exit_Port_PORT_EXCLUSIVE_AREA_04/23 SchM_Enter_Port_PORT_EXCLUSIVE_AREA_04/22 SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03/21 SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03/20 SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03/21 SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03/20 SchM_Exit_Port_PORT_EXCLUSIVE_AREA_02/19 SchM_Enter_Port_PORT_EXCLUSIVE_AREA_02/18 SchM_Exit_Port_PORT_EXCLUSIVE_AREA_01/17 SchM_Enter_Port_PORT_EXCLUSIVE_AREA_01/16 SchM_Exit_Port_PORT_EXCLUSIVE_AREA_00/15 SchM_Enter_Port_PORT_EXCLUSIVE_AREA_00/14 Port_Ci_Port_Ip_ConfigureInterleave/4 DevAssert/0 DevAssert/0 DevAssert/0 
Port_Ci_Port_Ip_ConfigureInterleave/4 (Port_Ci_Port_Ip_ConfigureInterleave) @069837e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: body optimize_size
  Called by: Port_Ci_Port_Ip_SetMuxModeSel/7 Port_Ci_Port_Ip_PinInit/5 
  Calls: SchM_Exit_Port_PORT_EXCLUSIVE_AREA_05/13 SchM_Enter_Port_PORT_EXCLUSIVE_AREA_05/12 Port_Ci_Port_Ip_GetAdcInterleaveVal/3 
Port_Ci_Port_Ip_GetAdcInterleaveVal/3 (Port_Ci_Port_Ip_GetAdcInterleaveVal) @06983460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Port_Ci_Port_Ip_ConfigureInterleave/4 
  Calls: 
Port_au32PortCiGpioBaseAddr/2 (Port_au32PortCiGpioBaseAddr) @0697ce58
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized
Port_au32PortCiPortBaseAddr/1 (Port_au32PortCiPortBaseAddr) @0697cdc8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Varpool flags: initialized
DevAssert/0 (DevAssert) @067e62a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: body local optimize_size
  Called by: Port_Ci_Port_Ip_SetGlobalPinControl/11 Port_Ci_Port_Ip_ConfigDigitalFilter/10 Port_Ci_Port_Ip_DisableDigitalFilter/9 Port_Ci_Port_Ip_EnableDigitalFilter/8 Port_Ci_Port_Ip_SetMuxModeSel/7 Port_Ci_Port_Ip_SetMuxModeSel/7 Port_Ci_Port_Ip_PinInit/5 Port_Ci_Port_Ip_PinInit/5 Port_Ci_Port_Ip_PinInit/5 
  Calls: 
Port_Ci_Port_Ip_SetGlobalPinControl (struct PORT_Type * const base, uint16 pins, uint16 value, Port_Ci_Port_Ip_PortGlobalControlPins halfPort)
{
  uint16 mask;

  <bb 2> :
  # DEBUG BEGIN_STMT
  mask = 0;
  # DEBUG BEGIN_STMT
  mask = mask | 1;
  # DEBUG BEGIN_STMT
  mask = mask | 2;
  # DEBUG BEGIN_STMT
  mask = mask | 16;
  # DEBUG BEGIN_STMT
  mask = mask | 64;
  # DEBUG BEGIN_STMT
  mask = mask | 1792;
  # DEBUG BEGIN_STMT
  mask = mask | 32768;
  # DEBUG BEGIN_STMT
  mask = mask & value;
  # DEBUG BEGIN_STMT
  switch (halfPort) <default: <L2> [INV], case 0: <L0> [INV], case 1: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _1 = (long unsigned int) pins;
  _2 = _1 << 16;
  _3 = (long unsigned int) mask;
  _4 = _2 | _3;
  base->GPCLR = _4;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _5 = (long unsigned int) pins;
  _6 = _5 << 16;
  _7 = (long unsigned int) mask;
  _8 = _6 | _7;
  base->GPCHR = _8;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  DevAssert (0);
  # DEBUG BEGIN_STMT

  <bb 6> :
  return;

}


Port_Ci_Port_Ip_ConfigDigitalFilter (struct PORT_Type * const base, const struct Port_Ci_Port_Ip_DigitalFilterConfigType * config)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = config->u8Width;
  _2 = _1 <= 31;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = config->u8Clock;
  _4 = (long unsigned int) _3;
  _5 = _4 & 1;
  base->DFCR = _5;
  # DEBUG BEGIN_STMT
  _6 = config->u8Width;
  _7 = (long unsigned int) _6;
  _8 = _7 & 31;
  base->DFWR = _8;
  return;

}


Port_Ci_Port_Ip_DisableDigitalFilter (struct PORT_Type * const base, uint32 pin)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pin <= 31;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_08 ();
  # DEBUG BEGIN_STMT
  _2 = base->DFER;
  _3 = 1 << pin;
  _4 = ~_3;
  _5 = _2 & _4;
  base->DFER = _5;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_08 ();
  return;

}


Port_Ci_Port_Ip_EnableDigitalFilter (struct PORT_Type * const base, uint32 pin)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pin <= 31;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_07 ();
  # DEBUG BEGIN_STMT
  _2 = base->DFER;
  _3 = 1 << pin;
  _4 = _2 | _3;
  base->DFER = _4;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_07 ();
  return;

}


Port_Ci_Port_Ip_SetMuxModeSel (struct PORT_Type * const base, uint32 pin, Port_Ci_Port_Ip_PortMux mux)
{
  Port_Ci_Port_Ip_PortMux muxing;
  uint32 regValue;

  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pin <= 31;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = base->PCR[pin];
  _3 = _2 & 32768;
  _4 = _3 == 0;
  DevAssert (_4);
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  muxing = mux;
  # DEBUG BEGIN_STMT
  muxing = Port_Ci_Port_Ip_ConfigureInterleave (base, pin, mux);
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_06 ();
  # DEBUG BEGIN_STMT
  regValue = base->PCR[pin];
  # DEBUG BEGIN_STMT
  regValue = regValue & 4294965503;
  # DEBUG BEGIN_STMT
  _5 = muxing << 8;
  _6 = _5 & 1792;
  regValue = regValue | _6;
  # DEBUG BEGIN_STMT
  base->PCR[pin] = regValue;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_06 ();
  return;

}


Port_Ci_Port_Ip_Init (uint32 pinCount, const struct Port_Ci_Port_Ip_PinSettingsConfig * config)
{
  uint32 i;
  Port_Ci_Port_Ip_PortStatusType D.5880;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  i = 0;
  goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = i * 40;
  _2 = config + _1;
  Port_Ci_Port_Ip_PinInit (_2);
  # DEBUG BEGIN_STMT
  i = i + 1;

  <bb 4> :
  # DEBUG BEGIN_STMT
  if (i < pinCount)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.5880 = 0;
  return D.5880;

}


Port_Ci_Port_Ip_PinInit (const struct Port_Ci_Port_Ip_PinSettingsConfig * config)
{
  Port_Ci_Port_Ip_PortMux retMuxing;
  Port_Ci_Port_Ip_PortMux muxing;
  uint32 digitalFilters;
  uint32 pinsValues;
  long unsigned int iftmp.1;
  long unsigned int iftmp.0;

  <bb 2> :
  # DEBUG BEGIN_STMT
  pinsValues = 0;
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  muxing = 0;
  # DEBUG BEGIN_STMT
  retMuxing = 0;
  # DEBUG BEGIN_STMT
  _1 = config != 0B;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = config->pinPortIdx;
  _3 = _2 <= 31;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  _4 = config->portBase;
  _5 = config->pinPortIdx;
  _6 = _4->PCR[_5];
  _7 = _6 & 32768;
  _8 = _7 == 0;
  DevAssert (_8);
  # DEBUG BEGIN_STMT
  _9 = config->pullConfig;
  if (_9 != 2)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  pinsValues = pinsValues | 2;
  # DEBUG BEGIN_STMT
  _10 = config->pullConfig;
  _11 = _10 & 1;
  pinsValues = pinsValues | _11;

  <bb 4> :
  # DEBUG BEGIN_STMT
  _12 = config->driveStrength;
  _13 = _12 << 6;
  _14 = _13 & 64;
  pinsValues = pinsValues | _14;
  # DEBUG BEGIN_STMT
  _15 = config->lockRegister;
  _16 = _15 << 15;
  _17 = _16 & 65535;
  pinsValues = pinsValues | _17;
  # DEBUG BEGIN_STMT
  _18 = config->passiveFilter;
  if (_18 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.0 = 16;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.0 = 0;

  <bb 7> :
  pinsValues = iftmp.0 | pinsValues;
  # DEBUG BEGIN_STMT
  muxing = config->mux;
  # DEBUG BEGIN_STMT
  _19 = config->portBase;
  _20 = config->pinPortIdx;
  retMuxing = Port_Ci_Port_Ip_ConfigureInterleave (_19, _20, muxing);
  # DEBUG BEGIN_STMT
  muxing = retMuxing;
  # DEBUG BEGIN_STMT
  _21 = muxing << 8;
  _22 = _21 & 1792;
  pinsValues = pinsValues | _22;
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_00 ();
  # DEBUG BEGIN_STMT
  _23 = config->portBase;
  digitalFilters = _23->DFER;
  # DEBUG BEGIN_STMT
  _24 = config->pinPortIdx;
  _25 = 1 << _24;
  _26 = ~_25;
  digitalFilters = digitalFilters & _26;
  # DEBUG BEGIN_STMT
  _27 = config->digitalFilter;
  if (_27 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 8> :
  iftmp.1 = 1;
  goto <bb 10>; [INV]

  <bb 9> :
  iftmp.1 = 0;

  <bb 10> :
  _28 = config->pinPortIdx;
  _29 = iftmp.1 << _28;
  digitalFilters = digitalFilters | _29;
  # DEBUG BEGIN_STMT
  _30 = config->portBase;
  _30->DFER = digitalFilters;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_00 ();
  # DEBUG BEGIN_STMT
  if (muxing == 1)
    goto <bb 11>; [INV]
  else
    goto <bb 20>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  _31 = config->direction;
  if (_31 == 2)
    goto <bb 12>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _32 = config->initValue;
  if (_32 == 1)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_01 ();
  # DEBUG BEGIN_STMT
  _33 = config->gpioBase;
  _34 = _33->PSOR;
  _35 = config->pinPortIdx;
  _36 = 1 << _35;
  _37 = config->gpioBase;
  _38 = _34 | _36;
  _37->PSOR = _38;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_01 ();
  goto <bb 16>; [INV]

  <bb 14> :
  # DEBUG BEGIN_STMT
  _39 = config->initValue;
  if (_39 == 0)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_02 ();
  # DEBUG BEGIN_STMT
  _40 = config->gpioBase;
  _41 = _40->PCOR;
  _42 = config->pinPortIdx;
  _43 = 1 << _42;
  _44 = config->gpioBase;
  _45 = _41 | _43;
  _44->PCOR = _45;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_02 ();

  <bb 16> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03 ();
  # DEBUG BEGIN_STMT
  _46 = config->gpioBase;
  _47 = _46->PDDR;
  _48 = config->pinPortIdx;
  _49 = 1 << _48;
  _50 = config->gpioBase;
  _51 = _47 | _49;
  _50->PDDR = _51;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03 ();
  goto <bb 20>; [INV]

  <bb 17> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_03 ();
  # DEBUG BEGIN_STMT
  _52 = config->gpioBase;
  _53 = _52->PDDR;
  _54 = config->pinPortIdx;
  _55 = 1 << _54;
  _56 = ~_55;
  _57 = config->gpioBase;
  _58 = _53 & _56;
  _57->PDDR = _58;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_03 ();
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_04 ();
  # DEBUG BEGIN_STMT
  _59 = config->gpioBase;
  _60 = _59->PIDR;
  _61 = config->pinPortIdx;
  _62 = 1 << _61;
  _63 = ~_62;
  _64 = config->gpioBase;
  _65 = _60 & _63;
  _64->PIDR = _65;
  # DEBUG BEGIN_STMT
  _66 = config->direction;
  if (_66 == 3)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 18> :
  # DEBUG BEGIN_STMT
  _67 = config->gpioBase;
  _68 = _67->PIDR;
  _69 = config->pinPortIdx;
  _70 = 1 << _69;
  _71 = config->gpioBase;
  _72 = _68 | _70;
  _71->PIDR = _72;

  <bb 19> :
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_04 ();

  <bb 20> :
  # DEBUG BEGIN_STMT
  _73 = config->portBase;
  _74 = config->pinPortIdx;
  _73->PCR[_74] = pinsValues;
  return;

}


Port_Ci_Port_Ip_ConfigureInterleave (struct PORT_Type * const base, uint32 pin, Port_Ci_Port_Ip_PortMux muxing)
{
  Port_Ci_Port_Ip_InterleaveMux interleaveVal;
  uint32 chipCtlReg;
  Port_Ci_Port_Ip_PortMux retMuxing;
  Port_Ci_Port_Ip_PortMux D.5867;

  <bb 2> :
  # DEBUG BEGIN_STMT
  retMuxing = muxing;
  # DEBUG BEGIN_STMT
  if (muxing == 8)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = 1074036736B;
  _2 = _1->CHIPCTL;
  chipCtlReg = _2 & 15;
  # DEBUG BEGIN_STMT
  interleaveVal = Port_Ci_Port_Ip_GetAdcInterleaveVal (base, pin, chipCtlReg);
  # DEBUG BEGIN_STMT
  if (interleaveVal != 255)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  SchM_Enter_Port_PORT_EXCLUSIVE_AREA_05 ();
  # DEBUG BEGIN_STMT
  _3 = 1074036736B;
  _4 = _3->CHIPCTL;
  _5 = 1074036736B;
  _6 = _4 & 4294967280;
  _5->CHIPCTL = _6;
  # DEBUG BEGIN_STMT
  _7 = 1074036736B;
  _8 = _7->CHIPCTL;
  _9 = interleaveVal & 15;
  _10 = 1074036736B;
  _11 = _8 | _9;
  _10->CHIPCTL = _11;
  # DEBUG BEGIN_STMT
  SchM_Exit_Port_PORT_EXCLUSIVE_AREA_05 ();

  <bb 5> :
  # DEBUG BEGIN_STMT
  retMuxing = 0;

  <bb 6> :
  # DEBUG BEGIN_STMT
  D.5867 = retMuxing;
  return D.5867;

}


Port_Ci_Port_Ip_GetAdcInterleaveVal (const struct PORT_Type * base, const uint32 pinPortIdx, const uint32 currentVal)
{
  uint32 adcInterleaveVal;
  uint32 D.5875;

  <bb 2> :
  # DEBUG BEGIN_STMT
  adcInterleaveVal = 255;
  # DEBUG BEGIN_STMT
  if (base == 1074044928B)
    goto <bb 3>; [INV]
  else
    goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  switch (pinPortIdx) <default: <L20> [INV], case 0: <L1> [INV], case 1: <L2> [INV], case 13: <L3> [INV], case 14: <L4> [INV], case 15: <L5> [INV], case 16: <L6> [INV]>

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  adcInterleaveVal = 1;
  # DEBUG BEGIN_STMT
  adcInterleaveVal = adcInterleaveVal | currentVal;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  adcInterleaveVal = 2;
  # DEBUG BEGIN_STMT
  adcInterleaveVal = adcInterleaveVal | currentVal;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 6> :
<L3>:
  # DEBUG BEGIN_STMT
  adcInterleaveVal = 4;
  # DEBUG BEGIN_STMT
  adcInterleaveVal = adcInterleaveVal | currentVal;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 7> :
<L4>:
  # DEBUG BEGIN_STMT
  adcInterleaveVal = 8;
  # DEBUG BEGIN_STMT
  adcInterleaveVal = adcInterleaveVal | currentVal;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 8> :
<L5>:
  # DEBUG BEGIN_STMT
  adcInterleaveVal = 14;
  # DEBUG BEGIN_STMT
  adcInterleaveVal = adcInterleaveVal & currentVal;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 9> :
<L6>:
  # DEBUG BEGIN_STMT
  adcInterleaveVal = 13;
  # DEBUG BEGIN_STMT
  adcInterleaveVal = adcInterleaveVal & currentVal;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 10> :
  # DEBUG BEGIN_STMT
  if (base == 1074049024B)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  switch (pinPortIdx) <default: <L20> [INV], case 0: <L11> [INV], case 1: <L12> [INV]>

  <bb 12> :
<L11>:
  # DEBUG BEGIN_STMT
  adcInterleaveVal = 11;
  # DEBUG BEGIN_STMT
  adcInterleaveVal = adcInterleaveVal & currentVal;
  # DEBUG BEGIN_STMT
  goto <bb 14>; [INV]

  <bb 13> :
<L12>:
  # DEBUG BEGIN_STMT
  adcInterleaveVal = 7;
  # DEBUG BEGIN_STMT
  adcInterleaveVal = adcInterleaveVal & currentVal;
  # DEBUG BEGIN_STMT

  <bb 14> :
<L20>:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  D.5875 = adcInterleaveVal;
  return D.5875;

}


DevAssert (volatile boolean x)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  x.2_1 = x;
  if (x.2_1 != 0)
    goto <bb 4>; [INV]
  else
    goto <bb 3>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("BKPT #0");
  # DEBUG BEGIN_STMT
  goto <bb 3>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


