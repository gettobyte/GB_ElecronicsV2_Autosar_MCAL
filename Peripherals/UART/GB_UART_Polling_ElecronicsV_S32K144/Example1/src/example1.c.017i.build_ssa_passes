main ()
{
  Clock_Ip_StatusType clockStatus;
  int D.6364;

  <bb 2> :
  clockStatus = Clock_Ip_Init (&Mcu_aClockConfigPB[0]);
  goto <bb 4>; [INV]

  <bb 3> :
  clockStatus = Clock_Ip_Init (&Mcu_aClockConfigPB[0]);

  <bb 4> :
  if (clockStatus != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :

  <bb 6> :
  _1 = Clock_Ip_GetPllStatus ();
  if (_1 != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  Clock_Ip_DistributePll ();
  Port_Init (0B);
  Lpuart_Uart_Ip_Init (1, &Lpuart_Uart_Ip_xHwConfigPB_1_BOARD_INITPERIPHERALS);
  gettobyte_tag_line.2_2 = gettobyte_tag_line;
  Lpuart_Uart_Ip_SyncSend (1, gettobyte_tag_line.2_2, 51, 100000);

  <bb 8> :
  gettobyte_tag_line.3_3 = gettobyte_tag_line;
  Lpuart_Uart_Ip_SyncSend (1, gettobyte_tag_line.3_3, 51, 100000);
  TestDelay (2000000);
  goto <bb 8>; [INV]

}


TestDelay (uint32 delay)
{
  static volatile uint32 DelayTimer = 0;

  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  DelayTimer.0_1 = DelayTimer;
  _2 = DelayTimer.0_1 + 1;
  DelayTimer = _2;

  <bb 4> :
  DelayTimer.1_3 = DelayTimer;
  if (delay > DelayTimer.1_3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  DelayTimer = 0;
  return;

}


