
Marking local functions:


Marking externally visible functions: main TestDelay


Marking externally visible variables: GB_FlexCAN_Receive_Data x


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

FlexCAN_Ip_RxFifo/19 (FlexCAN_Ip_RxFifo) @06d067e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 main/4 
  Calls: 
FlexCAN_Ip_SetStartMode_Privileged/18 (FlexCAN_Ip_SetStartMode_Privileged) @06d06700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
FlexCAN_Ip_ConfigRxFifo_Privileged/17 (FlexCAN_Ip_ConfigRxFifo_Privileged) @06d06620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
FlexCAN_Config0/16 (FlexCAN_Config0) @06d055e8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: main/4 (addr)
  Availability: not_available
  Varpool flags: read-only
FlexCAN_State0/15 (FlexCAN_State0) @06d055a0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: main/4 (addr)
  Availability: not_available
  Varpool flags:
FlexCAN_Ip_Init_Privileged/14 (FlexCAN_Ip_Init_Privileged) @06d06540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
Port_Init/13 (Port_Init) @06d06460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
CAN0_ORED_0_15_MB_IRQHandler/12 (CAN0_ORED_0_15_MB_IRQHandler) @06d06380
  Type: function
  Visibility: external public
  Address is taken.
  References: 
  Referring: main/4 (addr)
  Availability: not_available
  Function flags:
  Called by: 
  Calls: 
IntCtrl_Ip_InstallHandler/11 (IntCtrl_Ip_InstallHandler) @06d062a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
IntCtrl_Ip_EnableIrq/10 (IntCtrl_Ip_EnableIrq) @06d061c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
Clock_Ip_DistributePll/9 (Clock_Ip_DistributePll) @06d060e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
Clock_Ip_GetPllStatus/8 (Clock_Ip_GetPllStatus) @06d06000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
Mcu_aClockConfigPB/7 (Mcu_aClockConfigPB) @06d053a8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: main/4 (addr)
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_Init/6 (Clock_Ip_Init) @06d01000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: main/4 
  Calls: 
DelayTimer.7033/5 (DelayTimer) @06d05000
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: TestDelay/1 (read)TestDelay/1 (write)TestDelay/1 (read)TestDelay/1 (write)
  Availability: available
  Varpool flags: initialized
main/4 (main) @06d01a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: Mcu_aClockConfigPB/7 (addr)CAN0_ORED_0_15_MB_IRQHandler/12 (addr)FlexCAN_State0/15 (addr)FlexCAN_Config0/16 (addr)x/2 (addr)GB_FlexCAN_Receive_Data/3 (addr)GB_FlexCAN_Receive_Data/3 (addr)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: TestDelay/1 FlexCAN_Ip_RxFifo/19 FlexCAN_Ip_RxFifo/19 FlexCAN_Ip_SetStartMode_Privileged/18 FlexCAN_Ip_ConfigRxFifo_Privileged/17 FlexCAN_Ip_Init_Privileged/14 Port_Init/13 IntCtrl_Ip_InstallHandler/11 IntCtrl_Ip_EnableIrq/10 Clock_Ip_DistributePll/9 Clock_Ip_GetPllStatus/8 Clock_Ip_Init/6 
GB_FlexCAN_Receive_Data/3 (GB_FlexCAN_Receive_Data) @06cfcaf8
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: main/4 (addr)main/4 (addr)
  Availability: available
  Varpool flags:
x/2 (x) @06cfca68
  Type: variable definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: main/4 (addr)
  Availability: available
  Varpool flags: initialized read-only const-value-known
TestDelay/1 (TestDelay) @06d011c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: DelayTimer.7033/5 (read)DelayTimer.7033/5 (write)DelayTimer.7033/5 (read)DelayTimer.7033/5 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: main/4 
  Calls: 
main ()
{
  Flexcan_Ip_StatusType FlexCAN_Api_Status;
  int D.7051;

  <bb 2> :
  Clock_Ip_Init (&Mcu_aClockConfigPB[0]);

  <bb 3> :
  _1 = Clock_Ip_GetPllStatus ();
  if (_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 4> :
  Clock_Ip_DistributePll ();
  IntCtrl_Ip_EnableIrq (81);
  IntCtrl_Ip_InstallHandler (81, CAN0_ORED_0_15_MB_IRQHandler, 0B);
  Port_Init (0B);
  FlexCAN_Ip_Init_Privileged (0, &FlexCAN_State0, &FlexCAN_Config0);
  FlexCAN_Api_Status = FlexCAN_Ip_ConfigRxFifo_Privileged (0, 0, &x);
  FlexCAN_Api_Status = FlexCAN_Ip_SetStartMode_Privileged (0);
  FlexCAN_Api_Status = FlexCAN_Ip_RxFifo (0, &GB_FlexCAN_Receive_Data);

  <bb 5> :
  FlexCAN_Api_Status = FlexCAN_Ip_RxFifo (0, &GB_FlexCAN_Receive_Data);
  TestDelay (20000000);
  goto <bb 5>; [INV]

}


TestDelay (uint32 delay)
{
  static volatile uint32 DelayTimer = 0;

  <bb 2> :
  goto <bb 4>; [INV]

  <bb 3> :
  DelayTimer.0_1 = DelayTimer;
  _2 = DelayTimer.0_1 + 1;
  DelayTimer = _2;

  <bb 4> :
  DelayTimer.1_3 = DelayTimer;
  if (delay > DelayTimer.1_3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  DelayTimer = 0;
  return;

}


