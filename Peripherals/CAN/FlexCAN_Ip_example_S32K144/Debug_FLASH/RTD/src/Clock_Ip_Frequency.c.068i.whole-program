
Marking local functions:


Marking externally visible functions: GetFreq SetExternalSignalFrequency SetExternalOscillatorFrequency


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

freqTable.6503/89 (freqTable) @0763fc18
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_Zero_Frequency/8 (addr)get_LPO_128K_CLK_Frequency/9 (addr)get_SIRC_CLK_Frequency/12 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_FIRC_CLK_Frequency/10 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_SOSC_CLK_Frequency/11 (addr)get_SPLL_CLK_Frequency/13 (addr)get_SIRCDIV1_CLK_Frequency/14 (addr)get_SIRCDIV2_CLK_Frequency/15 (addr)get_FIRCDIV1_CLK_Frequency/16 (addr)get_FIRCDIV2_CLK_Frequency/17 (addr)get_SOSCDIV1_CLK_Frequency/18 (addr)get_SOSCDIV2_CLK_Frequency/19 (addr)get_SPLLDIV1_CLK_Frequency/20 (addr)get_SPLLDIV2_CLK_Frequency/21 (addr)get_LPO_32K_CLK_Frequency/22 (addr)get_LPO_1K_CLK_Frequency/23 (addr)get_tclk0_ref_Frequency/24 (addr)get_tclk1_ref_Frequency/25 (addr)get_tclk2_ref_Frequency/26 (addr)get_rtc_clkin_Frequency/27 (addr)get_SCS_CLK_Frequency/28 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_CORE_CLK_Frequency/29 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_BUS_CLK_Frequency/30 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_SLOW_CLK_Frequency/31 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_RTC_CLK_Frequency/32 (addr)get_LPO_CLK_Frequency/33 (addr)get_SCG_CLKOUT_CLK_Frequency/34 (addr)get_FTM0_EXT_CLK_Frequency/35 (addr)get_FTM1_EXT_CLK_Frequency/36 (addr)get_FTM2_EXT_CLK_Frequency/37 (addr)get_FTM3_EXT_CLK_Frequency/38 (addr)get_ADC0_CLK_Frequency/39 (addr)get_ADC1_CLK_Frequency/40 (addr)get_CLKOUT0_CLK_Frequency/41 (addr)get_CMP0_CLK_Frequency/42 (addr)get_CRC0_CLK_Frequency/43 (addr)get_DMA0_CLK_Frequency/44 (addr)get_DMAMUX0_CLK_Frequency/45 (addr)get_EIM0_CLK_Frequency/46 (addr)get_ERM0_CLK_Frequency/47 (addr)get_EWM0_CLK_Frequency/48 (addr)get_FLEXCAN0_CLK_Frequency/49 (addr)get_FLEXCAN1_CLK_Frequency/50 (addr)get_FLEXCAN2_CLK_Frequency/51 (addr)get_FlexIO_CLK_Frequency/56 (addr)get_FTFC_CLK_Frequency/57 (addr)get_FTM0_CLK_Frequency/52 (addr)get_FTM1_CLK_Frequency/53 (addr)get_FTM2_CLK_Frequency/54 (addr)get_FTM3_CLK_Frequency/55 (addr)get_LPI2C0_CLK_Frequency/58 (addr)get_LPIT0_CLK_Frequency/59 (addr)get_LPSPI0_CLK_Frequency/60 (addr)get_LPSPI1_CLK_Frequency/61 (addr)get_LPSPI2_CLK_Frequency/62 (addr)get_LPTMR0_CLK_Frequency/63 (addr)get_LPUART0_CLK_Frequency/64 (addr)get_LPUART1_CLK_Frequency/65 (addr)get_LPUART2_CLK_Frequency/66 (addr)get_MPU0_CLK_Frequency/67 (addr)get_MSCM0_CLK_Frequency/68 (addr)get_PDB0_CLK_Frequency/69 (addr)get_PDB1_CLK_Frequency/70 (addr)get_PORTA_CLK_Frequency/71 (addr)get_PORTB_CLK_Frequency/72 (addr)get_PORTC_CLK_Frequency/73 (addr)get_PORTD_CLK_Frequency/74 (addr)get_PORTE_CLK_Frequency/75 (addr)get_RTC0_CLK_Frequency/76 (addr)get_TRACE_CLK_Frequency/77 (addr)
  Referring: GetFreq/81 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
freqTableClkOut.6328/88 (freqTableClkOut) @07613d80
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_SCG_CLKOUT_CLK_Frequency/34 (addr)get_Zero_Frequency/8 (addr)get_SOSCDIV2_CLK_Frequency/19 (addr)get_Zero_Frequency/8 (addr)get_SIRCDIV2_CLK_Frequency/15 (addr)get_Zero_Frequency/8 (addr)get_FIRCDIV2_CLK_Frequency/17 (addr)get_CORE_CLK_Frequency/29 (addr)get_SPLLDIV2_CLK_Frequency/21 (addr)get_BUS_CLK_Frequency/30 (addr)get_LPO_128K_CLK_Frequency/9 (addr)get_Zero_Frequency/8 (addr)get_LPO_CLK_Frequency/33 (addr)get_Zero_Frequency/8 (addr)get_RTC_CLK_Frequency/32 (addr)get_Zero_Frequency/8 (addr)
  Referring: get_CLKOUT0_CLK_Frequency/41 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
freqTableScg.6304/87 (freqTableScg) @0760bee8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_SLOW_CLK_Frequency/31 (addr)get_SOSC_CLK_Frequency/11 (addr)get_SIRC_CLK_Frequency/12 (addr)get_FIRC_CLK_Frequency/10 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_SPLL_CLK_Frequency/13 (addr)get_Zero_Frequency/8 (addr)
  Referring: get_SCG_CLKOUT_CLK_Frequency/34 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
freqTableLpo.6300/86 (freqTableLpo) @0760bca8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_LPO_128K_CLK_Frequency/9 (addr)get_Zero_Frequency/8 (addr)get_LPO_32K_CLK_Frequency/22 (addr)get_LPO_1K_CLK_Frequency/23 (addr)
  Referring: get_LPO_CLK_Frequency/33 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
freqTableRtc.6296/85 (freqTableRtc) @0760ba68
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_SOSCDIV1_CLK_Frequency/18 (addr)get_LPO_32K_CLK_Frequency/22 (addr)get_rtc_clkin_Frequency/27 (addr)get_FIRCDIV1_CLK_Frequency/16 (addr)
  Referring: get_RTC_CLK_Frequency/32 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
freqTableSCS.6283/84 (freqTableSCS) @0760b318
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_Zero_Frequency/8 (addr)get_SOSC_CLK_Frequency/11 (addr)get_SIRC_CLK_Frequency/12 (addr)get_FIRC_CLK_Frequency/10 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_SPLL_CLK_Frequency/13 (addr)
  Referring: get_SCS_CLK_Frequency/28 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
spll_Freq.6228/83 (spll_Freq) @075ed288
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_SPLL_CLK_Frequency/13 (write)get_SPLL_CLK_Frequency/13 (read)get_SPLL_CLK_Frequency/13 (write)get_SPLL_CLK_Frequency/13 (read)
  Availability: available
  Varpool flags: initialized
spll_checksum.6229/82 (spll_checksum) @075ed1f8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_SPLL_CLK_Frequency/13 (read)get_SPLL_CLK_Frequency/13 (write)
  Availability: available
  Varpool flags: initialized
GetFreq/81 (GetFreq) @075e4a80
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: freqTable.6503/89 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
SetExternalSignalFrequency/80 (SetExternalSignalFrequency) @075e4700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: extSignalFreqEntries/6 (read)extSignalFreqEntries/6 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
SetExternalOscillatorFrequency/79 (SetExternalOscillatorFrequency) @075e4460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: sosc/7 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
PLL_VCO/78 (PLL_VCO) @075e41c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: get_SPLL_CLK_Frequency/13 
  Calls: get_SOSC_CLK_Frequency/11 
get_TRACE_CLK_Frequency/77 (get_TRACE_CLK_Frequency) @075dad20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_RTC0_CLK_Frequency/76 (get_RTC0_CLK_Frequency) @075da7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/30 
get_PORTE_CLK_Frequency/75 (get_PORTE_CLK_Frequency) @075da2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/30 
get_PORTD_CLK_Frequency/74 (get_PORTD_CLK_Frequency) @075daee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/30 
get_PORTC_CLK_Frequency/73 (get_PORTC_CLK_Frequency) @075dac40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/30 
get_PORTB_CLK_Frequency/72 (get_PORTB_CLK_Frequency) @075da9a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/30 
get_PORTA_CLK_Frequency/71 (get_PORTA_CLK_Frequency) @075da700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/30 
get_PDB1_CLK_Frequency/70 (get_PDB1_CLK_Frequency) @075da460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_PDB0_CLK_Frequency/69 (get_PDB0_CLK_Frequency) @075da1c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_MSCM0_CLK_Frequency/68 (get_MSCM0_CLK_Frequency) @075d2d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_MPU0_CLK_Frequency/67 (get_MPU0_CLK_Frequency) @075d27e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_LPUART2_CLK_Frequency/66 (get_LPUART2_CLK_Frequency) @075d22a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPUART1_CLK_Frequency/65 (get_LPUART1_CLK_Frequency) @075d2ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPUART0_CLK_Frequency/64 (get_LPUART0_CLK_Frequency) @075d2c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPTMR0_CLK_Frequency/63 (get_LPTMR0_CLK_Frequency) @075d29a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPSPI2_CLK_Frequency/62 (get_LPSPI2_CLK_Frequency) @075d2700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPSPI1_CLK_Frequency/61 (get_LPSPI1_CLK_Frequency) @075d2460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPSPI0_CLK_Frequency/60 (get_LPSPI0_CLK_Frequency) @075d21c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPIT0_CLK_Frequency/59 (get_LPIT0_CLK_Frequency) @075c9d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPI2C0_CLK_Frequency/58 (get_LPI2C0_CLK_Frequency) @075c97e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_FTFC_CLK_Frequency/57 (get_FTFC_CLK_Frequency) @075c92a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SLOW_CLK_Frequency/31 
get_FlexIO_CLK_Frequency/56 (get_FlexIO_CLK_Frequency) @075c9ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_FTM3_CLK_Frequency/55 (get_FTM3_CLK_Frequency) @075c9c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs1/4 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM3_EXT_CLK_Frequency/38 
   Indirect call
get_FTM2_CLK_Frequency/54 (get_FTM2_CLK_Frequency) @075c99a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs1/4 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM2_EXT_CLK_Frequency/37 
   Indirect call
get_FTM1_CLK_Frequency/53 (get_FTM1_CLK_Frequency) @075c9700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs1/4 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM1_EXT_CLK_Frequency/36 
   Indirect call
get_FTM0_CLK_Frequency/52 (get_FTM0_CLK_Frequency) @075c9460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs1/4 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FTM0_EXT_CLK_Frequency/35 
   Indirect call
get_FLEXCAN2_CLK_Frequency/51 (get_FLEXCAN2_CLK_Frequency) @075c91c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_FLEXCAN1_CLK_Frequency/50 (get_FLEXCAN1_CLK_Frequency) @075c5d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_FLEXCAN0_CLK_Frequency/49 (get_FLEXCAN0_CLK_Frequency) @075c57e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_EWM0_CLK_Frequency/48 (get_EWM0_CLK_Frequency) @075c52a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/30 
get_ERM0_CLK_Frequency/47 (get_ERM0_CLK_Frequency) @075c5ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_EIM0_CLK_Frequency/46 (get_EIM0_CLK_Frequency) @075c5c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_DMAMUX0_CLK_Frequency/45 (get_DMAMUX0_CLK_Frequency) @075c59a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/30 
get_DMA0_CLK_Frequency/44 (get_DMA0_CLK_Frequency) @075c5700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_CORE_CLK_Frequency/29 
get_CRC0_CLK_Frequency/43 (get_CRC0_CLK_Frequency) @075c5460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/30 
get_CMP0_CLK_Frequency/42 (get_CMP0_CLK_Frequency) @075c51c0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_BUS_CLK_Frequency/30 
get_CLKOUT0_CLK_Frequency/41 (get_CLKOUT0_CLK_Frequency) @06a7fe00
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTableClkOut.6328/88 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_ADC1_CLK_Frequency/40 (get_ADC1_CLK_Frequency) @06a7f620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_ADC0_CLK_Frequency/39 (get_ADC0_CLK_Frequency) @06a7f0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTablePcs2/3 (read)enableGate/1 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_FTM3_EXT_CLK_Frequency/38 (get_FTM3_EXT_CLK_Frequency) @06a7fd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTableSimFtm/5 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM3_CLK_Frequency/55 
  Calls: 
   Indirect call
get_FTM2_EXT_CLK_Frequency/37 (get_FTM2_EXT_CLK_Frequency) @06a7fa80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTableSimFtm/5 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM2_CLK_Frequency/54 
  Calls: 
   Indirect call
get_FTM1_EXT_CLK_Frequency/36 (get_FTM1_EXT_CLK_Frequency) @06a7f7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTableSimFtm/5 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM1_CLK_Frequency/53 
  Calls: 
   Indirect call
get_FTM0_EXT_CLK_Frequency/35 (get_FTM0_EXT_CLK_Frequency) @06a7f540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTableSimFtm/5 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTM0_CLK_Frequency/52 
  Calls: 
   Indirect call
get_SCG_CLKOUT_CLK_Frequency/34 (get_SCG_CLKOUT_CLK_Frequency) @06a7f2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTableScg.6304/87 (read)
  Referring: freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_LPO_CLK_Frequency/33 (get_LPO_CLK_Frequency) @06a7f000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTableLpo.6300/86 (read)
  Referring: freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_RTC_CLK_Frequency/32 (get_RTC_CLK_Frequency) @06a7db60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTableRtc.6296/85 (read)
  Referring: freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
get_SLOW_CLK_Frequency/31 (get_SLOW_CLK_Frequency) @06a7d620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: freqTableScg.6304/87 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_FTFC_CLK_Frequency/57 
  Calls: get_CORE_CLK_Frequency/29 
get_BUS_CLK_Frequency/30 (get_BUS_CLK_Frequency) @06a7d0e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_RTC0_CLK_Frequency/76 get_PORTE_CLK_Frequency/75 get_PORTD_CLK_Frequency/74 get_PORTC_CLK_Frequency/73 get_PORTB_CLK_Frequency/72 get_PORTA_CLK_Frequency/71 get_EWM0_CLK_Frequency/48 get_DMAMUX0_CLK_Frequency/45 get_CRC0_CLK_Frequency/43 get_CMP0_CLK_Frequency/42 
  Calls: get_CORE_CLK_Frequency/29 
get_CORE_CLK_Frequency/29 (get_CORE_CLK_Frequency) @06a7dd20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_TRACE_CLK_Frequency/77 get_PDB1_CLK_Frequency/70 get_PDB0_CLK_Frequency/69 get_MSCM0_CLK_Frequency/68 get_MPU0_CLK_Frequency/67 get_FLEXCAN2_CLK_Frequency/51 get_FLEXCAN1_CLK_Frequency/50 get_FLEXCAN0_CLK_Frequency/49 get_ERM0_CLK_Frequency/47 get_EIM0_CLK_Frequency/46 get_DMA0_CLK_Frequency/44 get_SLOW_CLK_Frequency/31 get_BUS_CLK_Frequency/30 
  Calls: get_SCS_CLK_Frequency/28 
get_SCS_CLK_Frequency/28 (get_SCS_CLK_Frequency) @06a7da80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: freqTableSCS.6283/84 (read)
  Referring: freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_CORE_CLK_Frequency/29 
  Calls: 
   Indirect call
get_rtc_clkin_Frequency/27 (get_rtc_clkin_Frequency) @06a7d7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: extSignalFreqEntries/6 (read)
  Referring: freqTableRtc.6296/85 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
get_tclk2_ref_Frequency/26 (get_tclk2_ref_Frequency) @06a7d540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: extSignalFreqEntries/6 (read)
  Referring: freqTableSimFtm/5 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
get_tclk1_ref_Frequency/25 (get_tclk1_ref_Frequency) @06a7d2a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: extSignalFreqEntries/6 (read)
  Referring: freqTableSimFtm/5 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
get_tclk0_ref_Frequency/24 (get_tclk0_ref_Frequency) @06a7d000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: extSignalFreqEntries/6 (read)
  Referring: freqTableSimFtm/5 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
get_LPO_1K_CLK_Frequency/23 (get_LPO_1K_CLK_Frequency) @06a76b60
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTableLpo.6300/86 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_LPO_128K_CLK_Frequency/9 
get_LPO_32K_CLK_Frequency/22 (get_LPO_32K_CLK_Frequency) @06a76620
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableGate/1 (read)
  Referring: freqTableRtc.6296/85 (addr)freqTableLpo.6300/86 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_LPO_128K_CLK_Frequency/9 
get_SPLLDIV2_CLK_Frequency/21 (get_SPLLDIV2_CLK_Frequency) @06a760e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: dividerMappingValue/2 (read)
  Referring: freqTablePcs2/3 (addr)freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SPLL_CLK_Frequency/13 
get_SPLLDIV1_CLK_Frequency/20 (get_SPLLDIV1_CLK_Frequency) @06a76d20
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: dividerMappingValue/2 (read)
  Referring: freqTablePcs1/4 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SPLL_CLK_Frequency/13 
get_SOSCDIV2_CLK_Frequency/19 (get_SOSCDIV2_CLK_Frequency) @06a76a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: dividerMappingValue/2 (read)
  Referring: freqTablePcs2/3 (addr)freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SOSC_CLK_Frequency/11 
get_SOSCDIV1_CLK_Frequency/18 (get_SOSCDIV1_CLK_Frequency) @06a767e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: dividerMappingValue/2 (read)
  Referring: freqTablePcs1/4 (addr)freqTableRtc.6296/85 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SOSC_CLK_Frequency/11 
get_FIRCDIV2_CLK_Frequency/17 (get_FIRCDIV2_CLK_Frequency) @06a76540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: dividerMappingValue/2 (read)
  Referring: freqTablePcs2/3 (addr)freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FIRC_CLK_Frequency/10 
get_FIRCDIV1_CLK_Frequency/16 (get_FIRCDIV1_CLK_Frequency) @06a762a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: dividerMappingValue/2 (read)
  Referring: freqTablePcs1/4 (addr)freqTableRtc.6296/85 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_FIRC_CLK_Frequency/10 
get_SIRCDIV2_CLK_Frequency/15 (get_SIRCDIV2_CLK_Frequency) @06a76000
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: dividerMappingValue/2 (read)
  Referring: freqTablePcs2/3 (addr)freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SIRC_CLK_Frequency/12 
get_SIRCDIV1_CLK_Frequency/14 (get_SIRCDIV1_CLK_Frequency) @069b5a80
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: dividerMappingValue/2 (read)
  Referring: freqTablePcs1/4 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: get_SIRC_CLK_Frequency/12 
get_SPLL_CLK_Frequency/13 (get_SPLL_CLK_Frequency) @069b5540
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: spll_checksum.6229/82 (read)spll_checksum.6229/82 (write)spll_Freq.6228/83 (write)enableClock/0 (read)spll_Freq.6228/83 (read)spll_Freq.6228/83 (write)spll_Freq.6228/83 (read)
  Referring: freqTableSCS.6283/84 (addr)freqTableScg.6304/87 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_SPLLDIV2_CLK_Frequency/21 get_SPLLDIV1_CLK_Frequency/20 
  Calls: PLL_VCO/78 
get_SIRC_CLK_Frequency/12 (get_SIRC_CLK_Frequency) @069b5ee0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableClock/0 (read)
  Referring: freqTableSCS.6283/84 (addr)freqTableScg.6304/87 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_SIRCDIV2_CLK_Frequency/15 get_SIRCDIV1_CLK_Frequency/14 
  Calls: 
get_SOSC_CLK_Frequency/11 (get_SOSC_CLK_Frequency) @069b5c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableClock/0 (read)sosc/7 (read)
  Referring: freqTableSCS.6283/84 (addr)freqTableScg.6304/87 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: PLL_VCO/78 get_SOSCDIV2_CLK_Frequency/19 get_SOSCDIV1_CLK_Frequency/18 
  Calls: 
get_FIRC_CLK_Frequency/10 (get_FIRC_CLK_Frequency) @069b59a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: enableClock/0 (read)
  Referring: freqTableSCS.6283/84 (addr)freqTableScg.6304/87 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_FIRCDIV2_CLK_Frequency/17 get_FIRCDIV1_CLK_Frequency/16 
  Calls: 
get_LPO_128K_CLK_Frequency/9 (get_LPO_128K_CLK_Frequency) @069b5700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: freqTableLpo.6300/86 (addr)freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: get_LPO_1K_CLK_Frequency/23 get_LPO_32K_CLK_Frequency/22 
  Calls: 
get_Zero_Frequency/8 (get_Zero_Frequency) @069b5460
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: freqTablePcs2/3 (addr)freqTablePcs2/3 (addr)freqTablePcs2/3 (addr)freqTablePcs1/4 (addr)freqTablePcs1/4 (addr)freqTablePcs1/4 (addr)freqTableSimFtm/5 (addr)freqTableSCS.6283/84 (addr)freqTableSCS.6283/84 (addr)freqTableSCS.6283/84 (addr)freqTableLpo.6300/86 (addr)freqTableScg.6304/87 (addr)freqTableScg.6304/87 (addr)freqTableScg.6304/87 (addr)freqTableClkOut.6328/88 (addr)freqTableClkOut.6328/88 (addr)freqTableClkOut.6328/88 (addr)freqTableClkOut.6328/88 (addr)freqTableClkOut.6328/88 (addr)freqTableClkOut.6328/88 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)freqTable.6503/89 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
sosc/7 (sosc) @069b3438
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_SOSC_CLK_Frequency/11 (read)SetExternalOscillatorFrequency/79 (write)
  Availability: available
  Varpool flags: initialized
extSignalFreqEntries/6 (extSignalFreqEntries) @069b33a8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_tclk2_ref_Frequency/26 (read)get_rtc_clkin_Frequency/27 (read)get_tclk0_ref_Frequency/24 (read)get_tclk1_ref_Frequency/25 (read)SetExternalSignalFrequency/80 (read)SetExternalSignalFrequency/80 (write)
  Availability: available
  Varpool flags: initialized
freqTableSimFtm/5 (freqTableSimFtm) @069b3318
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_tclk0_ref_Frequency/24 (addr)get_tclk1_ref_Frequency/25 (addr)get_tclk2_ref_Frequency/26 (addr)get_Zero_Frequency/8 (addr)
  Referring: get_FTM1_EXT_CLK_Frequency/36 (read)get_FTM2_EXT_CLK_Frequency/37 (read)get_FTM0_EXT_CLK_Frequency/35 (read)get_FTM3_EXT_CLK_Frequency/38 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
freqTablePcs1/4 (freqTablePcs1) @069b3288
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_Zero_Frequency/8 (addr)get_SOSCDIV1_CLK_Frequency/18 (addr)get_SIRCDIV1_CLK_Frequency/14 (addr)get_FIRCDIV1_CLK_Frequency/16 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_SPLLDIV1_CLK_Frequency/20 (addr)
  Referring: get_FTM1_CLK_Frequency/53 (read)get_FTM2_CLK_Frequency/54 (read)get_FTM0_CLK_Frequency/52 (read)get_FTM3_CLK_Frequency/55 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
freqTablePcs2/3 (freqTablePcs2) @069b31b0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: get_Zero_Frequency/8 (addr)get_SOSCDIV2_CLK_Frequency/19 (addr)get_SIRCDIV2_CLK_Frequency/15 (addr)get_FIRCDIV2_CLK_Frequency/17 (addr)get_Zero_Frequency/8 (addr)get_Zero_Frequency/8 (addr)get_SPLLDIV2_CLK_Frequency/21 (addr)
  Referring: get_LPUART0_CLK_Frequency/64 (read)get_LPUART1_CLK_Frequency/65 (read)get_ADC0_CLK_Frequency/39 (read)get_ADC1_CLK_Frequency/40 (read)get_FlexIO_CLK_Frequency/56 (read)get_LPI2C0_CLK_Frequency/58 (read)get_LPIT0_CLK_Frequency/59 (read)get_LPSPI0_CLK_Frequency/60 (read)get_LPSPI1_CLK_Frequency/61 (read)get_LPSPI2_CLK_Frequency/62 (read)get_LPTMR0_CLK_Frequency/63 (read)get_LPUART2_CLK_Frequency/66 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
dividerMappingValue/2 (dividerMappingValue) @069b30d8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_SOSCDIV2_CLK_Frequency/19 (read)get_SPLLDIV1_CLK_Frequency/20 (read)get_SIRCDIV1_CLK_Frequency/14 (read)get_SIRCDIV2_CLK_Frequency/15 (read)get_FIRCDIV1_CLK_Frequency/16 (read)get_FIRCDIV2_CLK_Frequency/17 (read)get_SOSCDIV1_CLK_Frequency/18 (read)get_SPLLDIV2_CLK_Frequency/21 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
enableGate/1 (enableGate) @069b3000
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_PORTE_CLK_Frequency/75 (read)get_RTC0_CLK_Frequency/76 (read)get_LPO_32K_CLK_Frequency/22 (read)get_LPO_1K_CLK_Frequency/23 (read)get_ADC0_CLK_Frequency/39 (read)get_ADC1_CLK_Frequency/40 (read)get_CMP0_CLK_Frequency/42 (read)get_CRC0_CLK_Frequency/43 (read)get_DMA0_CLK_Frequency/44 (read)get_DMAMUX0_CLK_Frequency/45 (read)get_EIM0_CLK_Frequency/46 (read)get_ERM0_CLK_Frequency/47 (read)get_EWM0_CLK_Frequency/48 (read)get_FLEXCAN0_CLK_Frequency/49 (read)get_FLEXCAN1_CLK_Frequency/50 (read)get_FLEXCAN2_CLK_Frequency/51 (read)get_FTM0_CLK_Frequency/52 (read)get_FTM1_CLK_Frequency/53 (read)get_FTM2_CLK_Frequency/54 (read)get_FTM3_CLK_Frequency/55 (read)get_FlexIO_CLK_Frequency/56 (read)get_FTFC_CLK_Frequency/57 (read)get_LPI2C0_CLK_Frequency/58 (read)get_LPIT0_CLK_Frequency/59 (read)get_LPSPI0_CLK_Frequency/60 (read)get_LPSPI1_CLK_Frequency/61 (read)get_LPSPI2_CLK_Frequency/62 (read)get_LPTMR0_CLK_Frequency/63 (read)get_LPUART0_CLK_Frequency/64 (read)get_LPUART1_CLK_Frequency/65 (read)get_LPUART2_CLK_Frequency/66 (read)get_MPU0_CLK_Frequency/67 (read)get_MSCM0_CLK_Frequency/68 (read)get_PDB0_CLK_Frequency/69 (read)get_PDB1_CLK_Frequency/70 (read)get_PORTA_CLK_Frequency/71 (read)get_PORTB_CLK_Frequency/72 (read)get_PORTC_CLK_Frequency/73 (read)get_PORTD_CLK_Frequency/74 (read)get_TRACE_CLK_Frequency/77 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
enableClock/0 (enableClock) @0696af30
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: get_SOSC_CLK_Frequency/11 (read)get_SIRC_CLK_Frequency/12 (read)get_FIRC_CLK_Frequency/10 (read)get_SPLL_CLK_Frequency/13 (read)
  Availability: available
  Varpool flags: initialized read-only const-value-known
GetFreq (Clock_Ip_NameType clockName)
{
  static uint32 (*getFreqType) (void) freqTable[87] = {get_Zero_Frequency, get_LPO_128K_CLK_Frequency, get_SIRC_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_FIRC_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_SOSC_CLK_Frequency, get_SPLL_CLK_Frequency, get_SIRCDIV1_CLK_Frequency, get_SIRCDIV2_CLK_Frequency, get_FIRCDIV1_CLK_Frequency, get_FIRCDIV2_CLK_Frequency, get_SOSCDIV1_CLK_Frequency, get_SOSCDIV2_CLK_Frequency, get_SPLLDIV1_CLK_Frequency, get_SPLLDIV2_CLK_Frequency, get_LPO_32K_CLK_Frequency, get_LPO_1K_CLK_Frequency, get_tclk0_ref_Frequency, get_tclk1_ref_Frequency, get_tclk2_ref_Frequency, get_rtc_clkin_Frequency, get_SCS_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_CORE_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_BUS_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_SLOW_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_RTC_CLK_Frequency, get_LPO_CLK_Frequency, get_SCG_CLKOUT_CLK_Frequency, get_FTM0_EXT_CLK_Frequency, get_FTM1_EXT_CLK_Frequency, get_FTM2_EXT_CLK_Frequency, get_FTM3_EXT_CLK_Frequency, 0B, get_ADC0_CLK_Frequency, get_ADC1_CLK_Frequency, get_CLKOUT0_CLK_Frequency, get_CMP0_CLK_Frequency, get_CRC0_CLK_Frequency, get_DMA0_CLK_Frequency, get_DMAMUX0_CLK_Frequency, get_EIM0_CLK_Frequency, get_ERM0_CLK_Frequency, get_EWM0_CLK_Frequency, get_FLEXCAN0_CLK_Frequency, get_FLEXCAN1_CLK_Frequency, get_FLEXCAN2_CLK_Frequency, get_FlexIO_CLK_Frequency, get_FTFC_CLK_Frequency, get_FTM0_CLK_Frequency, get_FTM1_CLK_Frequency, get_FTM2_CLK_Frequency, get_FTM3_CLK_Frequency, get_LPI2C0_CLK_Frequency, get_LPIT0_CLK_Frequency, get_LPSPI0_CLK_Frequency, get_LPSPI1_CLK_Frequency, get_LPSPI2_CLK_Frequency, get_LPTMR0_CLK_Frequency, get_LPUART0_CLK_Frequency, get_LPUART1_CLK_Frequency, get_LPUART2_CLK_Frequency, get_MPU0_CLK_Frequency, get_MSCM0_CLK_Frequency, get_PDB0_CLK_Frequency, get_PDB1_CLK_Frequency, get_PORTA_CLK_Frequency, get_PORTB_CLK_Frequency, get_PORTC_CLK_Frequency, get_PORTD_CLK_Frequency, get_PORTE_CLK_Frequency, get_RTC0_CLK_Frequency, get_TRACE_CLK_Frequency};
  uint32 D.6744;
  uint32 (*<T64c>) (void) _1;
  uint32 _5;

  <bb 2> :
  _1 = freqTable[clockName_3(D)];
  _5 = _1 ();

  <bb 3> :
<L0>:
  return _5;

}


SetExternalSignalFrequency (Clock_Ip_NameType signalName, uint32 frequency)
{
  uint32 i;
  <unnamed type> _1;

  <bb 2> :
  i_4 = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  _1 = extSignalFreqEntries[i_2].name;
  if (signalName_6(D) == _1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  extSignalFreqEntries[i_2].frequency = frequency_8(D);
  goto <bb 7>; [INV]

  <bb 5> :
  i_7 = i_2 + 1;

  <bb 6> :
  # i_2 = PHI <i_4(2), i_7(5)>
  if (i_2 <= 3)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  return;

}


SetExternalOscillatorFrequency (Clock_Ip_NameType extOscName, uint32 frequency)
{
  <bb 2> :
  sosc = frequency_2(D);
  return;

}


PLL_VCO (const struct SCG_Type * base)
{
  uint32 var2;
  uint32 var1;
  uint32 fout;
  uint32 mul;
  uint32 prediv;
  uint32 fin;
  uint32 D.6740;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;
  uint32 _21;

  <bb 2> :
  fin_13 = get_SOSC_CLK_Frequency ();
  _1 ={v} base_14(D)->SPLLCFG;
  _2 = _1 >> 8;
  _3 = _2 & 7;
  _4 = _3 + 1;
  prediv_15 = _4 << 1;
  _5 ={v} base_14(D)->SPLLCFG;
  _6 = _5 >> 16;
  _7 = _6 & 31;
  mul_16 = _7 + 16;
  var1_17 = mul_16 / prediv_15;
  _8 = var1_17 * prediv_15;
  var2_18 = mul_16 - _8;
  fout_19 = var1_17 * fin_13;
  _9 = fin_13 * var2_18;
  _10 = _9 / prediv_15;
  fout_20 = fout_19 + _10;
  _21 = fout_20;

  <bb 3> :
<L0>:
  return _21;

}


get_TRACE_CLK_Frequency ()
{
  uint32 mulValue;
  uint32 divValue;
  uint32 frequency;
  uint32 D.6738;
  long unsigned int D.6737;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct SIM_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  struct SIM_Type * _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _16;
  uint32 _20;

  <bb 2> :
  frequency_15 = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 ={v} _1->CLKDIV4;
  _3 = _2 >> 28;
  _4 = _3 & 1;
  _16 = enableGate[_4];
  frequency_17 = _16 & frequency_15;
  _5 = 1074036736B;
  _6 ={v} _5->CLKDIV4;
  _7 = _6 >> 1;
  _8 = _7 & 7;
  divValue_18 = _8 + 1;
  _9 = 1074036736B;
  _10 ={v} _9->CLKDIV4;
  _11 = _10 & 1;
  mulValue_19 = _11 + 1;
  _12 = frequency_17 * mulValue_19;
  _20 = _12 / divValue_18;

  <bb 3> :
<L0>:
  return _20;

}


get_RTC0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6735;
  long unsigned int D.6734;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[61];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_PORTE_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6732;
  long unsigned int D.6731;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[77];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_PORTD_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6729;
  long unsigned int D.6728;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[76];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_PORTC_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6726;
  long unsigned int D.6725;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[75];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_PORTB_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6723;
  long unsigned int D.6722;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[74];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_PORTA_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6720;
  long unsigned int D.6719;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[73];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_PDB1_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6717;
  long unsigned int D.6716;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_CORE_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[49];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_PDB0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6714;
  long unsigned int D.6713;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_CORE_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[54];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_MSCM0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6711;
  long unsigned int D.6710;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _7;
  uint32 _9;

  <bb 2> :
  frequency_6 = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 ={v} _1->PLATCGC;
  _3 = _2 & 1;
  _7 = enableGate[_3];
  frequency_8 = _7 & frequency_6;
  _9 = frequency_8;

  <bb 3> :
<L0>:
  return _9;

}


get_MPU0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6708;
  long unsigned int D.6707;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 ={v} _1->PLATCGC;
  _3 = _2 >> 1;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_LPUART2_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6705;
  long unsigned int D.6704;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[108];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[108];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_LPUART1_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6702;
  long unsigned int D.6701;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[107];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[107];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_LPUART0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6699;
  long unsigned int D.6698;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[106];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[106];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_LPTMR0_CLK_Frequency ()
{
  uint32 mulValue;
  uint32 divValue;
  uint32 frequency;
  uint32 D.6696;
  long unsigned int D.6695;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  struct PCC_Type * _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  struct PCC_Type * _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int _23;
  uint32 _25;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[64];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_20 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[64];
  _8 = _7 & 7;
  divValue_21 = _8 + 1;
  _9 = 1074155520B;
  _10 ={v} _9->PCCn[64];
  _11 = _10 >> 3;
  _12 = _11 & 1;
  mulValue_22 = _12 + 1;
  _13 = 1074155520B;
  _14 ={v} _13->PCCn[64];
  _15 = _14 >> 30;
  _16 = _15 & 1;
  _23 = enableGate[_16];
  frequency_24 = _23 & frequency_20;
  _17 = frequency_24 * mulValue_22;
  _25 = _17 / divValue_21;

  <bb 3> :
<L0>:
  return _25;

}


get_LPSPI2_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6693;
  long unsigned int D.6692;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[45];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[45];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_LPSPI1_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6690;
  long unsigned int D.6689;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[45];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[45];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_LPSPI0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6687;
  long unsigned int D.6686;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[44];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[44];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_LPIT0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6684;
  long unsigned int D.6683;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[55];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[55];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_LPI2C0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6681;
  long unsigned int D.6680;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[102];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[102];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_FTFC_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6678;
  long unsigned int D.6677;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_SLOW_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[32];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_FlexIO_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6675;
  long unsigned int D.6674;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[90];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[90];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_FTM3_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6672;
  long unsigned int D.6671;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct PCC_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  uint32 (*<T64c>) (void) _9;
  struct PCC_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _21;
  uint32 _23;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[38];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 ={v} _5->PCCn[38];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = freqTablePcs1[_8];
  frequency_20 = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  frequency_18 = get_FTM3_EXT_CLK_Frequency ();

  <bb 5> :
  # frequency_14 = PHI <frequency_20(3), frequency_18(4)>
  _10 = 1074155520B;
  _11 ={v} _10->PCCn[38];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  _21 = enableGate[_13];
  frequency_22 = _21 & frequency_14;
  _23 = frequency_22;

  <bb 6> :
<L3>:
  return _23;

}


get_FTM2_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6666;
  long unsigned int D.6665;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct PCC_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  uint32 (*<T64c>) (void) _9;
  struct PCC_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _21;
  uint32 _23;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[58];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 ={v} _5->PCCn[58];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = freqTablePcs1[_8];
  frequency_20 = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  frequency_18 = get_FTM2_EXT_CLK_Frequency ();

  <bb 5> :
  # frequency_14 = PHI <frequency_20(3), frequency_18(4)>
  _10 = 1074155520B;
  _11 ={v} _10->PCCn[58];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  _21 = enableGate[_13];
  frequency_22 = _21 & frequency_14;
  _23 = frequency_22;

  <bb 6> :
<L3>:
  return _23;

}


get_FTM1_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6660;
  long unsigned int D.6659;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct PCC_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  uint32 (*<T64c>) (void) _9;
  struct PCC_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _21;
  uint32 _23;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[57];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 ={v} _5->PCCn[57];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = freqTablePcs1[_8];
  frequency_20 = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  frequency_18 = get_FTM1_EXT_CLK_Frequency ();

  <bb 5> :
  # frequency_14 = PHI <frequency_20(3), frequency_18(4)>
  _10 = 1074155520B;
  _11 ={v} _10->PCCn[57];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  _21 = enableGate[_13];
  frequency_22 = _21 & frequency_14;
  _23 = frequency_22;

  <bb 6> :
<L3>:
  return _23;

}


get_FTM0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6654;
  long unsigned int D.6653;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  struct PCC_Type * _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _8;
  uint32 (*<T64c>) (void) _9;
  struct PCC_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _21;
  uint32 _23;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[56];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  if (_4 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = 1074155520B;
  _6 ={v} _5->PCCn[56];
  _7 = _6 >> 24;
  _8 = _7 & 7;
  _9 = freqTablePcs1[_8];
  frequency_20 = _9 ();
  goto <bb 5>; [INV]

  <bb 4> :
  frequency_18 = get_FTM0_EXT_CLK_Frequency ();

  <bb 5> :
  # frequency_14 = PHI <frequency_20(3), frequency_18(4)>
  _10 = 1074155520B;
  _11 ={v} _10->PCCn[56];
  _12 = _11 >> 30;
  _13 = _12 & 1;
  _21 = enableGate[_13];
  frequency_22 = _21 & frequency_14;
  _23 = frequency_22;

  <bb 6> :
<L3>:
  return _23;

}


get_FLEXCAN2_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6648;
  long unsigned int D.6647;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_CORE_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[43];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_FLEXCAN1_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6645;
  long unsigned int D.6644;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_CORE_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[37];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_FLEXCAN0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6642;
  long unsigned int D.6641;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_CORE_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[36];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_EWM0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6639;
  long unsigned int D.6638;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[97];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_ERM0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6636;
  long unsigned int D.6635;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 ={v} _1->PLATCGC;
  _3 = _2 >> 3;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_EIM0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6633;
  long unsigned int D.6632;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 ={v} _1->PLATCGC;
  _3 = _2 >> 4;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_DMAMUX0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6630;
  long unsigned int D.6629;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[33];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_DMA0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6627;
  long unsigned int D.6626;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_CORE_CLK_Frequency ();
  _1 = 1074036736B;
  _2 ={v} _1->PLATCGC;
  _3 = _2 >> 2;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_CRC0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6624;
  long unsigned int D.6623;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[50];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_CMP0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6621;
  long unsigned int D.6620;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _8;
  uint32 _10;

  <bb 2> :
  frequency_7 = get_BUS_CLK_Frequency ();
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[115];
  _3 = _2 >> 30;
  _4 = _3 & 1;
  _8 = enableGate[_4];
  frequency_9 = _8 & frequency_7;
  _10 = frequency_9;

  <bb 3> :
<L0>:
  return _10;

}


get_CLKOUT0_CLK_Frequency ()
{
  uint32 frequency;
  const uint32 enableDivider[2];
  static uint32 (*getFreqType) (void) freqTableClkOut[16] = {get_SCG_CLKOUT_CLK_Frequency, get_Zero_Frequency, get_SOSCDIV2_CLK_Frequency, get_Zero_Frequency, get_SIRCDIV2_CLK_Frequency, get_Zero_Frequency, get_FIRCDIV2_CLK_Frequency, get_CORE_CLK_Frequency, get_SPLLDIV2_CLK_Frequency, get_BUS_CLK_Frequency, get_LPO_128K_CLK_Frequency, get_Zero_Frequency, get_LPO_CLK_Frequency, get_Zero_Frequency, get_RTC_CLK_Frequency, get_Zero_Frequency};
  uint32 D.6617;
  long unsigned int D.6616;
  long unsigned int D.6615;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct SIM_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  struct SIM_Type * _10;
  long unsigned int _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _19;
  long unsigned int _21;
  uint32 _23;

  <bb 2> :
  enableDivider[0] = 0;
  enableDivider[1] = 4294967295;
  _1 = 1074036736B;
  _2 ={v} _1->CHIPCTL;
  _3 = _2 >> 4;
  _4 = _3 & 15;
  _5 = freqTableClkOut[_4];
  frequency_18 = _5 ();
  _6 = 1074036736B;
  _7 ={v} _6->CHIPCTL;
  _8 = _7 >> 11;
  _9 = _8 & 1;
  _19 = enableDivider[_9];
  frequency_20 = _19 & frequency_18;
  _10 = 1074036736B;
  _11 ={v} _10->CHIPCTL;
  _12 = _11 >> 8;
  _13 = _12 & 7;
  _21 = _13 + 1;
  frequency_22 = frequency_20 / _21;
  _23 = frequency_22;
  enableDivider ={v} {CLOBBER};

  <bb 3> :
<L1>:
  return _23;

}


get_ADC1_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6613;
  long unsigned int D.6612;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[39];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[39];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_ADC0_CLK_Frequency ()
{
  uint32 frequency;
  uint32 D.6610;
  long unsigned int D.6609;
  struct PCC_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  struct PCC_Type * _6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _13;
  uint32 _15;

  <bb 2> :
  _1 = 1074155520B;
  _2 ={v} _1->PCCn[59];
  _3 = _2 >> 24;
  _4 = _3 & 7;
  _5 = freqTablePcs2[_4];
  frequency_12 = _5 ();
  _6 = 1074155520B;
  _7 ={v} _6->PCCn[59];
  _8 = _7 >> 30;
  _9 = _8 & 1;
  _13 = enableGate[_9];
  frequency_14 = _13 & frequency_12;
  _15 = frequency_14;

  <bb 3> :
<L0>:
  return _15;

}


get_FTM3_EXT_CLK_Frequency ()
{
  uint32 D.6607;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  uint32 _8;

  <bb 2> :
  _1 = 1074036736B;
  _2 ={v} _1->FTMOPT0;
  _3 = _2 >> 30;
  _4 = _3 & 3;
  _5 = freqTableSimFtm[_4];
  _8 = _5 ();

  <bb 3> :
<L0>:
  return _8;

}


get_FTM2_EXT_CLK_Frequency ()
{
  uint32 D.6605;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  uint32 _8;

  <bb 2> :
  _1 = 1074036736B;
  _2 ={v} _1->FTMOPT0;
  _3 = _2 >> 28;
  _4 = _3 & 3;
  _5 = freqTableSimFtm[_4];
  _8 = _5 ();

  <bb 3> :
<L0>:
  return _8;

}


get_FTM1_EXT_CLK_Frequency ()
{
  uint32 D.6603;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  uint32 _8;

  <bb 2> :
  _1 = 1074036736B;
  _2 ={v} _1->FTMOPT0;
  _3 = _2 >> 26;
  _4 = _3 & 3;
  _5 = freqTableSimFtm[_4];
  _8 = _5 ();

  <bb 3> :
<L0>:
  return _8;

}


get_FTM0_EXT_CLK_Frequency ()
{
  uint32 D.6601;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  uint32 _8;

  <bb 2> :
  _1 = 1074036736B;
  _2 ={v} _1->FTMOPT0;
  _3 = _2 >> 24;
  _4 = _3 & 3;
  _5 = freqTableSimFtm[_4];
  _8 = _5 ();

  <bb 3> :
<L0>:
  return _8;

}


get_SCG_CLKOUT_CLK_Frequency ()
{
  static uint32 (*getFreqType) (void) freqTableScg[8] = {get_SLOW_CLK_Frequency, get_SOSC_CLK_Frequency, get_SIRC_CLK_Frequency, get_FIRC_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_SPLL_CLK_Frequency, get_Zero_Frequency};
  uint32 D.6599;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  uint32 _8;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->CLKOUTCNFG;
  _3 = _2 >> 24;
  _4 = _3 & 15;
  _5 = freqTableScg[_4];
  _8 = _5 ();

  <bb 3> :
<L0>:
  return _8;

}


get_LPO_CLK_Frequency ()
{
  static uint32 (*getFreqType) (void) freqTableLpo[4] = {get_LPO_128K_CLK_Frequency, get_Zero_Frequency, get_LPO_32K_CLK_Frequency, get_LPO_1K_CLK_Frequency};
  uint32 D.6597;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  uint32 _8;

  <bb 2> :
  _1 = 1074036736B;
  _2 ={v} _1->LPOCLKS;
  _3 = _2 >> 2;
  _4 = _3 & 3;
  _5 = freqTableLpo[_4];
  _8 = _5 ();

  <bb 3> :
<L0>:
  return _8;

}


get_RTC_CLK_Frequency ()
{
  static uint32 (*getFreqType) (void) freqTableRtc[4] = {get_SOSCDIV1_CLK_Frequency, get_LPO_32K_CLK_Frequency, get_rtc_clkin_Frequency, get_FIRCDIV1_CLK_Frequency};
  uint32 D.6595;
  struct SIM_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  uint32 _8;

  <bb 2> :
  _1 = 1074036736B;
  _2 ={v} _1->LPOCLKS;
  _3 = _2 >> 4;
  _4 = _3 & 3;
  _5 = freqTableRtc[_4];
  _8 = _5 ();

  <bb 3> :
<L0>:
  return _8;

}


get_SLOW_CLK_Frequency ()
{
  uint32 D.6593;
  long unsigned int _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  uint32 _8;

  <bb 2> :
  _1 = get_CORE_CLK_Frequency ();
  _2 = 1074151424B;
  _3 ={v} _2->CSR;
  _4 = _3 & 15;
  _5 = _4 + 1;
  _8 = _1 / _5;

  <bb 3> :
<L0>:
  return _8;

}


get_BUS_CLK_Frequency ()
{
  uint32 D.6591;
  long unsigned int _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  uint32 _9;

  <bb 2> :
  _1 = get_CORE_CLK_Frequency ();
  _2 = 1074151424B;
  _3 ={v} _2->CSR;
  _4 = _3 >> 4;
  _5 = _4 & 15;
  _6 = _5 + 1;
  _9 = _1 / _6;

  <bb 3> :
<L0>:
  return _9;

}


get_CORE_CLK_Frequency ()
{
  uint32 D.6589;
  long unsigned int _1;
  struct SCG_Type * _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  uint32 _9;

  <bb 2> :
  _1 = get_SCS_CLK_Frequency ();
  _2 = 1074151424B;
  _3 ={v} _2->CSR;
  _4 = _3 >> 16;
  _5 = _4 & 15;
  _6 = _5 + 1;
  _9 = _1 / _6;

  <bb 3> :
<L0>:
  return _9;

}


get_SCS_CLK_Frequency ()
{
  static uint32 (*getFreqType) (void) freqTableSCS[7] = {get_Zero_Frequency, get_SOSC_CLK_Frequency, get_SIRC_CLK_Frequency, get_FIRC_CLK_Frequency, get_Zero_Frequency, get_Zero_Frequency, get_SPLL_CLK_Frequency};
  uint32 D.6587;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 (*<T64c>) (void) _5;
  uint32 _8;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->CSR;
  _3 = _2 >> 24;
  _4 = _3 & 15;
  _5 = freqTableSCS[_4];
  _8 = _5 ();

  <bb 3> :
<L0>:
  return _8;

}


get_rtc_clkin_Frequency ()
{
  uint32 D.6585;
  uint32 _2;

  <bb 2> :
  _2 = extSignalFreqEntries[3].frequency;

  <bb 3> :
<L0>:
  return _2;

}


get_tclk2_ref_Frequency ()
{
  uint32 D.6583;
  uint32 _2;

  <bb 2> :
  _2 = extSignalFreqEntries[2].frequency;

  <bb 3> :
<L0>:
  return _2;

}


get_tclk1_ref_Frequency ()
{
  uint32 D.6581;
  uint32 _2;

  <bb 2> :
  _2 = extSignalFreqEntries[1].frequency;

  <bb 3> :
<L0>:
  return _2;

}


get_tclk0_ref_Frequency ()
{
  uint32 D.6579;
  uint32 _2;

  <bb 2> :
  _2 = extSignalFreqEntries[0].frequency;

  <bb 3> :
<L0>:
  return _2;

}


get_LPO_1K_CLK_Frequency ()
{
  uint32 D.6577;
  long unsigned int _1;
  long unsigned int _2;
  struct SIM_Type * _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  uint32 _9;

  <bb 2> :
  _1 = get_LPO_128K_CLK_Frequency ();
  _2 = _1 >> 7;
  _3 = 1074036736B;
  _4 ={v} _3->LPOCLKS;
  _5 = _4 & 1;
  _6 = enableGate[_5];
  _9 = _2 & _6;

  <bb 3> :
<L0>:
  return _9;

}


get_LPO_32K_CLK_Frequency ()
{
  uint32 D.6575;
  long unsigned int _1;
  long unsigned int _2;
  struct SIM_Type * _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  uint32 _10;

  <bb 2> :
  _1 = get_LPO_128K_CLK_Frequency ();
  _2 = _1 >> 2;
  _3 = 1074036736B;
  _4 ={v} _3->LPOCLKS;
  _5 = _4 >> 1;
  _6 = _5 & 1;
  _7 = enableGate[_6];
  _10 = _2 & _7;

  <bb 3> :
<L0>:
  return _10;

}


get_SPLLDIV2_CLK_Frequency ()
{
  uint32 divValue;
  uint32 iftmp.11;
  uint32 D.6569;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  unsigned char _5;
  long unsigned int _6;
  uint32 iftmp.11_7;
  uint32 iftmp.11_11;
  uint32 iftmp.11_13;
  uint32 _14;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SPLLDIV;
  _3 = _2 >> 8;
  _4 = _3 & 7;
  _5 = dividerMappingValue[_4];
  divValue_10 = (uint32) _5;
  if (divValue_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = get_SPLL_CLK_Frequency ();
  iftmp.11_13 = _6 / divValue_10;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.11_11 = 0;

  <bb 5> :
  # iftmp.11_7 = PHI <iftmp.11_13(3), iftmp.11_11(4)>
  _14 = iftmp.11_7;

  <bb 6> :
<L3>:
  return _14;

}


get_SPLLDIV1_CLK_Frequency ()
{
  uint32 divValue;
  uint32 iftmp.10;
  uint32 D.6563;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  long unsigned int _5;
  uint32 iftmp.10_6;
  uint32 iftmp.10_10;
  uint32 iftmp.10_12;
  uint32 _13;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SPLLDIV;
  _3 = _2 & 7;
  _4 = dividerMappingValue[_3];
  divValue_9 = (uint32) _4;
  if (divValue_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = get_SPLL_CLK_Frequency ();
  iftmp.10_12 = _5 / divValue_9;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.10_10 = 0;

  <bb 5> :
  # iftmp.10_6 = PHI <iftmp.10_12(3), iftmp.10_10(4)>
  _13 = iftmp.10_6;

  <bb 6> :
<L3>:
  return _13;

}


get_SOSCDIV2_CLK_Frequency ()
{
  uint32 divValue;
  uint32 iftmp.9;
  uint32 D.6557;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  unsigned char _5;
  long unsigned int _6;
  uint32 iftmp.9_7;
  uint32 iftmp.9_11;
  uint32 iftmp.9_13;
  uint32 _14;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SOSCDIV;
  _3 = _2 >> 8;
  _4 = _3 & 7;
  _5 = dividerMappingValue[_4];
  divValue_10 = (uint32) _5;
  if (divValue_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = get_SOSC_CLK_Frequency ();
  iftmp.9_13 = _6 / divValue_10;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.9_11 = 0;

  <bb 5> :
  # iftmp.9_7 = PHI <iftmp.9_13(3), iftmp.9_11(4)>
  _14 = iftmp.9_7;

  <bb 6> :
<L3>:
  return _14;

}


get_SOSCDIV1_CLK_Frequency ()
{
  uint32 divValue;
  uint32 iftmp.8;
  uint32 D.6551;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  long unsigned int _5;
  uint32 iftmp.8_6;
  uint32 iftmp.8_10;
  uint32 iftmp.8_12;
  uint32 _13;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SOSCDIV;
  _3 = _2 & 7;
  _4 = dividerMappingValue[_3];
  divValue_9 = (uint32) _4;
  if (divValue_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = get_SOSC_CLK_Frequency ();
  iftmp.8_12 = _5 / divValue_9;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.8_10 = 0;

  <bb 5> :
  # iftmp.8_6 = PHI <iftmp.8_12(3), iftmp.8_10(4)>
  _13 = iftmp.8_6;

  <bb 6> :
<L3>:
  return _13;

}


get_FIRCDIV2_CLK_Frequency ()
{
  uint32 divValue;
  uint32 iftmp.7;
  uint32 D.6545;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  unsigned char _5;
  long unsigned int _6;
  uint32 iftmp.7_7;
  uint32 iftmp.7_11;
  uint32 iftmp.7_13;
  uint32 _14;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->FIRCDIV;
  _3 = _2 >> 8;
  _4 = _3 & 7;
  _5 = dividerMappingValue[_4];
  divValue_10 = (uint32) _5;
  if (divValue_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = get_FIRC_CLK_Frequency ();
  iftmp.7_13 = _6 / divValue_10;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.7_11 = 0;

  <bb 5> :
  # iftmp.7_7 = PHI <iftmp.7_13(3), iftmp.7_11(4)>
  _14 = iftmp.7_7;

  <bb 6> :
<L3>:
  return _14;

}


get_FIRCDIV1_CLK_Frequency ()
{
  uint32 divValue;
  uint32 iftmp.6;
  uint32 D.6539;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  long unsigned int _5;
  uint32 iftmp.6_6;
  uint32 iftmp.6_10;
  uint32 iftmp.6_12;
  uint32 _13;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->FIRCDIV;
  _3 = _2 & 7;
  _4 = dividerMappingValue[_3];
  divValue_9 = (uint32) _4;
  if (divValue_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = get_FIRC_CLK_Frequency ();
  iftmp.6_12 = _5 / divValue_9;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.6_10 = 0;

  <bb 5> :
  # iftmp.6_6 = PHI <iftmp.6_12(3), iftmp.6_10(4)>
  _13 = iftmp.6_6;

  <bb 6> :
<L3>:
  return _13;

}


get_SIRCDIV2_CLK_Frequency ()
{
  uint32 divValue;
  uint32 iftmp.5;
  uint32 D.6533;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  unsigned char _5;
  long unsigned int _6;
  uint32 iftmp.5_7;
  uint32 iftmp.5_11;
  uint32 iftmp.5_13;
  uint32 _14;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SIRCDIV;
  _3 = _2 >> 8;
  _4 = _3 & 7;
  _5 = dividerMappingValue[_4];
  divValue_10 = (uint32) _5;
  if (divValue_10 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _6 = get_SIRC_CLK_Frequency ();
  iftmp.5_13 = _6 / divValue_10;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.5_11 = 0;

  <bb 5> :
  # iftmp.5_7 = PHI <iftmp.5_13(3), iftmp.5_11(4)>
  _14 = iftmp.5_7;

  <bb 6> :
<L3>:
  return _14;

}


get_SIRCDIV1_CLK_Frequency ()
{
  uint32 divValue;
  uint32 iftmp.4;
  uint32 D.6527;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  unsigned char _4;
  long unsigned int _5;
  uint32 iftmp.4_6;
  uint32 iftmp.4_10;
  uint32 iftmp.4_12;
  uint32 _13;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SIRCDIV;
  _3 = _2 & 7;
  _4 = dividerMappingValue[_3];
  divValue_9 = (uint32) _4;
  if (divValue_9 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _5 = get_SIRC_CLK_Frequency ();
  iftmp.4_12 = _5 / divValue_9;
  goto <bb 5>; [INV]

  <bb 4> :
  iftmp.4_10 = 0;

  <bb 5> :
  # iftmp.4_6 = PHI <iftmp.4_12(3), iftmp.4_10(4)>
  _13 = iftmp.4_6;

  <bb 6> :
<L3>:
  return _13;

}


get_SPLL_CLK_Frequency ()
{
  static uint32 spll_checksum = 1572864;
  static uint32 spll_Freq = 160000000;
  uint32 iftmp.3;
  uint32 D.6521;
  long unsigned int D.6520;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int spll_checksum.1_3;
  struct SCG_Type * _4;
  long unsigned int _5;
  long unsigned int _6;
  struct SCG_Type * _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int spll_Freq.2_10;
  long unsigned int _11;
  struct SCG_Type * _12;
  long unsigned int _13;
  long unsigned int _14;
  uint32 iftmp.3_15;
  long unsigned int _21;
  uint32 iftmp.3_23;
  uint32 iftmp.3_24;
  uint32 _25;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SPLLCFG;
  spll_checksum.1_3 = spll_checksum;
  if (_2 != spll_checksum.1_3)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  _4 = 1074151424B;
  _5 ={v} _4->SPLLCFG;
  spll_checksum = _5;
  _6 = PLL_VCO (1074151424B);
  spll_Freq = _6;
  _7 = 1074151424B;
  _8 ={v} _7->SPLLCSR;
  _9 = _8 & 1;
  _21 = enableClock[_9];
  spll_Freq.2_10 = spll_Freq;
  _11 = _21 & spll_Freq.2_10;
  spll_Freq = _11;

  <bb 4> :
  _12 = 1074151424B;
  _13 ={v} _12->SPLLCSR;
  _14 = _13 & 16777216;
  if (_14 != 0)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  iftmp.3_24 = spll_Freq;
  goto <bb 7>; [INV]

  <bb 6> :
  iftmp.3_23 = 0;

  <bb 7> :
  # iftmp.3_15 = PHI <iftmp.3_24(5), iftmp.3_23(6)>
  _25 = iftmp.3_15;

  <bb 8> :
<L5>:
  return _25;

}


get_SIRC_CLK_Frequency ()
{
  uint32 D.6516;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 _6;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SIRCCSR;
  _3 = _2 & 1;
  _4 = enableClock[_3];
  _6 = _4 & 8000000;

  <bb 3> :
<L0>:
  return _6;

}


get_SOSC_CLK_Frequency ()
{
  uint32 D.6514;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int sosc.0_5;
  uint32 _7;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->SOSCCSR;
  _3 = _2 & 1;
  _4 = enableClock[_3];
  sosc.0_5 = sosc;
  _7 = _4 & sosc.0_5;

  <bb 3> :
<L0>:
  return _7;

}


get_FIRC_CLK_Frequency ()
{
  uint32 D.6512;
  struct SCG_Type * _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  uint32 _6;

  <bb 2> :
  _1 = 1074151424B;
  _2 ={v} _1->FIRCCSR;
  _3 = _2 & 1;
  _4 = enableClock[_3];
  _6 = _4 & 48000000;

  <bb 3> :
<L0>:
  return _6;

}


get_LPO_128K_CLK_Frequency ()
{
  uint32 D.6510;
  uint32 _1;

  <bb 2> :
  _1 = 128000;

  <bb 3> :
<L0>:
  return _1;

}


get_Zero_Frequency ()
{
  uint32 D.6508;
  uint32 _1;

  <bb 2> :
  _1 = 0;

  <bb 3> :
<L0>:
  return _1;

}


