
Marking local functions:


Marking externally visible functions: ClockTimeoutExpired ClockStartTimeout ReportClockErrors Clock_Ip_GetClockFrequency Clock_Ip_EnableModuleClock Clock_Ip_DisableModuleClock Clock_Ip_InstallNotificationsCallback Clock_Ip_PowerModeChangeNotification Clock_Ip_ClearClockMonitorStatus Clock_Ip_GetClockMonitorStatus Clock_Ip_DisableClockMonitor Clock_Ip_DistributePll Clock_Ip_GetPllStatus Clock_Ip_InitClock Clock_Ip_Init


Marking externally visible variables:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

functionWasCalled.6221/56 (functionWasCalled) @069a88b8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: CallEmptyCallbacks/21 (read)CallEmptyCallbacks/21 (write)
  Availability: available
  Varpool flags: initialized
SetExternalSignalFrequency/55 (SetExternalSignalFrequency) @069aa1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: UpdateDriverContext/20 
  Calls: 
OsIf_GetElapsed/54 (OsIf_GetElapsed) @069aa000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: ClockTimeoutExpired/19 
  Calls: 
OsIf_MicrosToTicks/53 (OsIf_MicrosToTicks) @0699cee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: ClockStartTimeout/18 
  Calls: 
OsIf_GetCounter/52 (OsIf_GetCounter) @0699ce00
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: ClockStartTimeout/18 
  Calls: 
GetFreq/51 (GetFreq) @0699ca80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_GetClockFrequency/15 
  Calls: 
ClockPowerModeChangeNotification/50 (ClockPowerModeChangeNotification) @0699c620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_PowerModeChangeNotification/11 
  Calls: 
ClockInitializeObjects/49 (ClockInitializeObjects) @0699c540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: UpdateDriverContext/20 Clock_Ip_PowerModeChangeNotification/11 
  Calls: 
HwPllName/48 (HwPllName) @0699a558
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_GetPllStatus/6 (read)Clock_Ip_GetPllStatus/6 (read)
  Availability: not_available
  Varpool flags: read-only
DisableSafeClock/47 (DisableSafeClock) @070517e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_DistributePll/7 Clock_Ip_InitClock/5 
  Calls: 
SpecificPeripheralClockInitialization/46 (SpecificPeripheralClockInitialization) @07051540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_DistributePll/7 Clock_Ip_InitClock/5 
  Calls: 
gateCallbacks/45 (gateCallbacks) @0699a048
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DisableModuleClock/13 (read)Clock_Ip_EnableModuleClock/14 (read)CallEmptyCallbacks/21 (read)CallEmptyCallbacks/21 (read)
  Availability: not_available
  Varpool flags: read-only
gateCallbackIndex/44 (gateCallbackIndex) @0699a000
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DisableModuleClock/13 (read)Clock_Ip_EnableModuleClock/14 (read)
  Availability: not_available
  Varpool flags: read-only
selectorCallbacks/43 (selectorCallbacks) @07064ee8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_DistributePll/7 (read)CallEmptyCallbacks/21 (read)ResetClockConfiguration/22 (read)
  Availability: not_available
  Varpool flags: read-only
selectorCallbackIndex/42 (selectorCallbackIndex) @07064ea0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_DistributePll/7 (read)ResetClockConfiguration/22 (read)
  Availability: not_available
  Varpool flags: read-only
sourceType_clockName/41 (sourceType_clockName) @07064e58
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_DistributePll/7 (read)
  Availability: not_available
  Varpool flags: read-only
fracDivCallbacks/40 (fracDivCallbacks) @07064d80
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)CallEmptyCallbacks/21 (read)CallEmptyCallbacks/21 (read)ResetClockConfiguration/22 (read)
  Availability: not_available
  Varpool flags: read-only
fractional_dividerCallbackIndex/39 (fractional_dividerCallbackIndex) @07064d38
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)ResetClockConfiguration/22 (read)
  Availability: not_available
  Varpool flags: read-only
pllCallbacks/38 (pllCallbacks) @07064ab0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_GetPllStatus/6 (read)CallEmptyCallbacks/21 (read)CallEmptyCallbacks/21 (read)ResetClockConfiguration/22 (read)
  Availability: not_available
  Varpool flags: read-only
pllCallbackIndex/37 (pllCallbackIndex) @07064a68
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_GetPllStatus/6 (read)ResetClockConfiguration/22 (read)
  Availability: not_available
  Varpool flags: read-only
dividerCallbacks/36 (dividerCallbacks) @07064900
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)CallEmptyCallbacks/21 (read)
  Availability: not_available
  Varpool flags: read-only
dividerCallbackIndex/35 (dividerCallbackIndex) @070648b8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)
  Availability: not_available
  Varpool flags: read-only
dividerTriggerCallbacks/34 (dividerTriggerCallbacks) @070647e0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)CallEmptyCallbacks/21 (read)
  Availability: not_available
  Varpool flags: read-only
dividertriggerCallbackIndex/33 (dividertriggerCallbackIndex) @07064798
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)
  Availability: not_available
  Varpool flags: read-only
pcfsCallbacks/32 (pcfsCallbacks) @070646c0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)CallEmptyCallbacks/21 (read)
  Availability: not_available
  Varpool flags: read-only
pcfsCallbackIndex/31 (pcfsCallbackIndex) @07064678
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)
  Availability: not_available
  Varpool flags: read-only
extOscCallbacks/30 (extOscCallbacks) @07064558
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)CallEmptyCallbacks/21 (read)ResetClockConfiguration/22 (read)
  Availability: not_available
  Varpool flags: read-only
xoscCallbackIndex/29 (xoscCallbackIndex) @07064510
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)ResetClockConfiguration/22 (read)
  Availability: not_available
  Varpool flags: read-only
intOscCallbacks/28 (intOscCallbacks) @07064438
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)CallEmptyCallbacks/21 (read)
  Availability: not_available
  Varpool flags: read-only
ircoscCallbackIndex/27 (ircoscCallbackIndex) @070643f0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)
  Availability: not_available
  Varpool flags: read-only
SpecificPlatformInitClock/26 (SpecificPlatformInitClock) @070512a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags:
  Called by: Clock_Ip_InitClock/5 
  Calls: 
cmuCallbacks/25 (cmuCallbacks) @07064288
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DisableClockMonitor/8 (read)Clock_Ip_GetClockMonitorStatus/9 (read)Clock_Ip_ClearClockMonitorStatus/10 (read)CallEmptyCallbacks/21 (read)CallEmptyCallbacks/21 (read)CallEmptyCallbacks/21 (read)CallEmptyCallbacks/21 (read)
  Availability: not_available
  Varpool flags: read-only
cmuCallbackIndex/24 (cmuCallbackIndex) @07064240
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DisableClockMonitor/8 (read)Clock_Ip_GetClockMonitorStatus/9 (read)Clock_Ip_ClearClockMonitorStatus/10 (read)
  Availability: not_available
  Varpool flags: read-only
clockFeatures/23 (clockFeatures) @070641f8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (read)Clock_Ip_GetPllStatus/6 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DisableClockMonitor/8 (read)Clock_Ip_GetClockMonitorStatus/9 (read)Clock_Ip_ClearClockMonitorStatus/10 (read)Clock_Ip_DisableModuleClock/13 (read)Clock_Ip_EnableModuleClock/14 (read)ResetClockConfiguration/22 (read)ResetClockConfiguration/22 (read)ResetClockConfiguration/22 (read)ResetClockConfiguration/22 (read)
  Availability: not_available
  Varpool flags: read-only
ResetClockConfiguration/22 (ResetClockConfiguration) @07051c40
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: clockFeatures/23 (read)selectorCallbackIndex/42 (read)selectorCallbacks/43 (read)clockFeatures/23 (read)fractional_dividerCallbackIndex/39 (read)fracDivCallbacks/40 (read)clockFeatures/23 (read)pllCallbackIndex/37 (read)pllCallbacks/38 (read)clockFeatures/23 (read)xoscCallbackIndex/29 (read)extOscCallbacks/30 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_InitClock/5 
  Calls: 
   Indirect call
   Indirect call
   Indirect call
   Indirect call
CallEmptyCallbacks/21 (CallEmptyCallbacks) @070519a0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: functionWasCalled.6221/56 (read)functionWasCalled.6221/56 (write)cmuCallbacks/25 (read)cmuCallbacks/25 (read)cmuCallbacks/25 (read)cmuCallbacks/25 (read)dividerCallbacks/36 (read)dividerTriggerCallbacks/34 (read)extOscCallbacks/30 (read)fracDivCallbacks/40 (read)fracDivCallbacks/40 (read)gateCallbacks/45 (read)gateCallbacks/45 (read)intOscCallbacks/28 (read)pllCallbacks/38 (read)pllCallbacks/38 (read)selectorCallbacks/43 (read)pcfsCallbacks/32 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: UpdateDriverContext/20 
  Calls: 
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
UpdateDriverContext/20 (UpdateDriverContext) @07051700
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: clockObjectsAreInitialized/1 (read)clockObjectsAreInitialized/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_InitClock/5 
  Calls: CallEmptyCallbacks/21 SetExternalSignalFrequency/55 ClockInitializeObjects/49 
ClockTimeoutExpired/19 (ClockTimeoutExpired) @07051460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: OsIf_GetElapsed/54 
ClockStartTimeout/18 (ClockStartTimeout) @070511c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: OsIf_MicrosToTicks/53 OsIf_GetCounter/52 
ReportClockErrors/17 (ReportClockErrors) @0704cd20
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockNotificationsCallback/2 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
ClockNotificatonsEmptyCallback/16 (ClockNotificatonsEmptyCallback) @0704c7e0
  Type: function definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  Address is taken.
  References: 
  Referring: clockNotificationsCallback/2 (addr)
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_GetClockFrequency/15 (Clock_Ip_GetClockFrequency) @0704c2a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: 
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: GetFreq/51 
Clock_Ip_EnableModuleClock/14 (Clock_Ip_EnableModuleClock) @0704cee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockFeatures/23 (read)gateCallbackIndex/44 (read)gateCallbacks/45 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
Clock_Ip_DisableModuleClock/13 (Clock_Ip_DisableModuleClock) @0704cc40
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockFeatures/23 (read)gateCallbackIndex/44 (read)gateCallbacks/45 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
Clock_Ip_InstallNotificationsCallback/12 (Clock_Ip_InstallNotificationsCallback) @0704c9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockNotificationsCallback/2 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
Clock_Ip_PowerModeChangeNotification/11 (Clock_Ip_PowerModeChangeNotification) @0704c700
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockObjectsAreInitialized/1 (read)clockObjectsAreInitialized/1 (write)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: ClockPowerModeChangeNotification/50 ClockInitializeObjects/49 
Clock_Ip_ClearClockMonitorStatus/10 (Clock_Ip_ClearClockMonitorStatus) @0704c460
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockFeatures/23 (read)cmuCallbackIndex/24 (read)cmuCallbacks/25 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
Clock_Ip_GetClockMonitorStatus/9 (Clock_Ip_GetClockMonitorStatus) @0704c1c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockFeatures/23 (read)cmuCallbackIndex/24 (read)cmuCallbacks/25 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
Clock_Ip_DisableClockMonitor/8 (Clock_Ip_DisableClockMonitor) @0689dee0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockFeatures/23 (read)cmuCallbackIndex/24 (read)cmuCallbacks/25 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: 
   Indirect call
Clock_Ip_DistributePll/7 (Clock_Ip_DistributePll) @0689d9a0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockConfig/3 (read)clockConfig/3 (read)sourceType_clockName/41 (read)clockConfig/3 (read)clockFeatures/23 (read)selectorCallbackIndex/42 (read)selectorCallbacks/43 (read)clockConfig/3 (read)clockConfig/3 (read)clockTreeIsConsumingPll/0 (read)clockConfig/3 (read)clockFeatures/23 (read)gateCallbackIndex/44 (read)gateCallbacks/45 (read)clockConfig/3 (read)clockConfig/3 (read)clockConfig/3 (read)clockConfig/3 (read)clockFeatures/23 (read)cmuCallbackIndex/24 (read)cmuCallbacks/25 (read)clockConfig/3 (read)clockConfig/3 (read)clockConfig/3 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Init/4 
  Calls: DisableSafeClock/47 SpecificPeripheralClockInitialization/46 
   Indirect call
   Indirect call
   Indirect call
Clock_Ip_GetPllStatus/6 (Clock_Ip_GetPllStatus) @0689de00
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: HwPllName/48 (read)clockFeatures/23 (read)pllCallbackIndex/37 (read)pllCallbacks/38 (read)HwPllName/48 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Init/4 
  Calls: 
   Indirect call
Clock_Ip_InitClock/5 (Clock_Ip_InitClock) @0689db60
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockConfig/3 (read)clockFeatures/23 (read)cmuCallbackIndex/24 (read)cmuCallbacks/25 (read)clockConfig/3 (write)clockFeatures/23 (read)ircoscCallbackIndex/27 (read)intOscCallbacks/28 (read)clockFeatures/23 (read)xoscCallbackIndex/29 (read)extOscCallbacks/30 (read)clockFeatures/23 (read)pcfsCallbackIndex/31 (read)pcfsCallbacks/32 (read)clockFeatures/23 (read)dividertriggerCallbackIndex/33 (read)dividerTriggerCallbacks/34 (read)clockFeatures/23 (read)dividerCallbackIndex/35 (read)dividerCallbacks/36 (read)clockFeatures/23 (read)dividertriggerCallbackIndex/33 (read)dividerTriggerCallbacks/34 (read)clockFeatures/23 (read)pllCallbackIndex/37 (read)pllCallbacks/38 (read)clockFeatures/23 (read)cmuCallbackIndex/24 (read)cmuCallbacks/25 (read)clockFeatures/23 (read)xoscCallbackIndex/29 (read)extOscCallbacks/30 (read)clockFeatures/23 (read)pllCallbackIndex/37 (read)pllCallbacks/38 (read)clockFeatures/23 (read)fractional_dividerCallbackIndex/39 (read)fracDivCallbacks/40 (read)clockTreeIsConsumingPll/0 (write)sourceType_clockName/41 (read)clockFeatures/23 (read)selectorCallbackIndex/42 (read)selectorCallbacks/43 (read)clockTreeIsConsumingPll/0 (write)clockTreeIsConsumingPll/0 (read)clockFeatures/23 (read)gateCallbackIndex/44 (read)gateCallbacks/45 (read)clockFeatures/23 (read)cmuCallbackIndex/24 (read)cmuCallbacks/25 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: Clock_Ip_Init/4 
  Calls: DisableSafeClock/47 SpecificPeripheralClockInitialization/46 UpdateDriverContext/20 ResetClockConfiguration/22 SpecificPlatformInitClock/26 
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
   Indirect call
Clock_Ip_Init/4 (Clock_Ip_Init) @0689d8c0
  Type: function definition analyzed
  Visibility: force_output externally_visible no_reorder public
  References: clockTreeIsConsumingPll/0 (read)
  Referring: 
  Availability: available
  Function flags: body
  Called by: 
  Calls: Clock_Ip_DistributePll/7 Clock_Ip_GetPllStatus/6 Clock_Ip_InitClock/5 
clockConfig/3 (clockConfig) @068a01b0
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_InitClock/5 (read)Clock_Ip_InitClock/5 (write)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)Clock_Ip_DistributePll/7 (read)
  Availability: available
  Varpool flags:
clockNotificationsCallback/2 (clockNotificationsCallback) @068a0168
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: ClockNotificatonsEmptyCallback/16 (addr)
  Referring: Clock_Ip_InstallNotificationsCallback/12 (write)ReportClockErrors/17 (read)
  Availability: available
  Varpool flags: initialized
clockObjectsAreInitialized/1 (clockObjectsAreInitialized) @068a00d8
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_PowerModeChangeNotification/11 (read)Clock_Ip_PowerModeChangeNotification/11 (write)UpdateDriverContext/20 (read)UpdateDriverContext/20 (write)
  Availability: available
  Varpool flags:
clockTreeIsConsumingPll/0 (clockTreeIsConsumingPll) @068a0048
  Type: variable definition analyzed
  Visibility: force_output no_reorder prevailing_def_ironly
  References: 
  Referring: Clock_Ip_Init/4 (read)Clock_Ip_InitClock/5 (write)Clock_Ip_InitClock/5 (write)Clock_Ip_InitClock/5 (read)Clock_Ip_DistributePll/7 (read)
  Availability: available
  Varpool flags:
ResetClockConfiguration (const struct Clock_Ip_ClockConfigType * config)
{
  uint32 i;
  uint32 callbackIndex;

  <bb 2> :
  _1 = config->selectorsCount;
  i = (uint32) _1;
  goto <bb 4>; [INV]

  <bb 3> :
  _2 = i + 4294967295;
  _3 = config->selectors[_2].name;
  _4 = clockFeatures[_3][1];
  _5 = (int) _4;
  _6 = selectorCallbackIndex[_5];
  callbackIndex = (uint32) _6;
  _7 = selectorCallbacks[callbackIndex].Reset;
  _8 = i + 4294967295;
  _9 = &config->selectors[_8];
  _7 (_9);
  i = i + 4294967295;

  <bb 4> :
  if (i != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  _10 = config->fracDivsCount;
  i = (uint32) _10;
  goto <bb 7>; [INV]

  <bb 6> :
  _11 = i + 4294967295;
  _12 = config->fracDivs[_11].name;
  _13 = clockFeatures[_12][1];
  _14 = (int) _13;
  _15 = fractional_dividerCallbackIndex[_14];
  callbackIndex = (uint32) _15;
  _16 = fracDivCallbacks[callbackIndex].Reset;
  _17 = i + 4294967295;
  _18 = &config->fracDivs[_17];
  _16 (_18);
  i = i + 4294967295;

  <bb 7> :
  if (i != 0)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  _19 = config->pllsCount;
  i = (uint32) _19;
  goto <bb 10>; [INV]

  <bb 9> :
  _20 = i + 4294967295;
  _21 = config->plls[_20].name;
  _22 = clockFeatures[_21][1];
  _23 = (int) _22;
  _24 = pllCallbackIndex[_23];
  callbackIndex = (uint32) _24;
  _25 = pllCallbacks[callbackIndex].Reset;
  _26 = i + 4294967295;
  _27 = &config->plls[_26];
  _25 (_27);
  i = i + 4294967295;

  <bb 10> :
  if (i != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  _28 = config->xoscsCount;
  i = (uint32) _28;
  goto <bb 13>; [INV]

  <bb 12> :
  _29 = i + 4294967295;
  _30 = config->xoscs[_29].name;
  _31 = clockFeatures[_30][1];
  _32 = (int) _31;
  _33 = xoscCallbackIndex[_32];
  callbackIndex = (uint32) _33;
  _34 = extOscCallbacks[callbackIndex].Reset;
  _35 = i + 4294967295;
  _36 = &config->xoscs[_35];
  _34 (_36);
  i = i + 4294967295;

  <bb 13> :
  if (i != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]

  <bb 14> :
  return;

}


CallEmptyCallbacks ()
{
  static boolean functionWasCalled = 0;

  <bb 2> :
  functionWasCalled.20_1 = functionWasCalled;
  _2 = ~functionWasCalled.20_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  functionWasCalled = 1;
  _3 = cmuCallbacks[0].Set;
  _3 (0B);
  _4 = cmuCallbacks[0].Disable;
  _4 (87);
  _5 = cmuCallbacks[0].Clear;
  _5 (87);
  _6 = cmuCallbacks[0].GetStatus;
  _6 (87);
  _7 = dividerCallbacks[0].Set;
  _7 (0B);
  _8 = dividerTriggerCallbacks[0].Configure;
  _8 (0B);
  _9 = extOscCallbacks[0].Reset;
  _9 (0B);
  _10 = fracDivCallbacks[0].Set;
  _10 (0B);
  _11 = fracDivCallbacks[0].Complete;
  _11 (87);
  _12 = gateCallbacks[0].Set;
  _12 (0B);
  _13 = gateCallbacks[0].Update;
  _13 (87, 0);
  _14 = intOscCallbacks[0].Set;
  _14 (0B);
  _15 = pllCallbacks[0].Set;
  _15 (0B);
  _16 = pllCallbacks[0].Complete;
  _16 (87);
  _17 = selectorCallbacks[0].Set;
  _17 (0B);
  _18 = pcfsCallbacks[0].Set;
  _18 (0B);

  <bb 4> :
  return;

}


UpdateDriverContext (const struct Clock_Ip_ClockConfigType * config)
{
  uint32 i;

  <bb 2> :
  clockObjectsAreInitialized.19_1 = clockObjectsAreInitialized;
  _2 = ~clockObjectsAreInitialized.19_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  ClockInitializeObjects ();
  clockObjectsAreInitialized = 1;

  <bb 4> :
  i = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  _3 = config->extClks[i].name;
  _4 = config->extClks[i].value;
  SetExternalSignalFrequency (_3, _4);
  i = i + 1;

  <bb 6> :
  _5 = config->extClksCount;
  _6 = (long unsigned int) _5;
  if (i < _6)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  CallEmptyCallbacks ();
  return;

}


ClockTimeoutExpired (uint32 * startTimeInOut, uint32 * elapsedTimeInOut, uint32 TimeoutTicks)
{
  boolean D.6277;
  long unsigned int D.6276;

  <bb 2> :
  D.6276 = OsIf_GetElapsed (startTimeInOut, 0);
  _1 = *elapsedTimeInOut;
  _2 = D.6276 + _1;
  *elapsedTimeInOut = _2;
  _3 = *elapsedTimeInOut;
  D.6277 = TimeoutTicks <= _3;

  <bb 3> :
<L0>:
  return D.6277;

}


ClockStartTimeout (uint32 * startTimeOut, uint32 * elapsedTimeOut, uint32 * timeoutTicksOut, uint32 timeoutUs)
{
  <bb 2> :
  _1 = OsIf_GetCounter (0);
  *startTimeOut = _1;
  *elapsedTimeOut = 0;
  _2 = OsIf_MicrosToTicks (timeoutUs, 0);
  *timeoutTicksOut = _2;
  return;

}


ReportClockErrors (Clock_Ip_ClockNotificationType error, Clock_Ip_NameType clockName)
{
  <bb 2> :
  clockNotificationsCallback.18_1 = clockNotificationsCallback;
  clockNotificationsCallback.18_1 (error, clockName);
  return;

}


ClockNotificatonsEmptyCallback (Clock_Ip_ClockNotificationType notification, Clock_Ip_NameType clockName)
{
  <bb 2> :
  return;

}


Clock_Ip_GetClockFrequency (Clock_Ip_NameType clockName)
{
  uint32 D.6274;

  <bb 2> :
  D.6274 = GetFreq (clockName);

  <bb 3> :
<L0>:
  return D.6274;

}


Clock_Ip_EnableModuleClock (Clock_Ip_NameType clockName)
{
  uint32 callbackIndex;

  <bb 2> :
  _1 = clockFeatures[clockName][1];
  _2 = (int) _1;
  _3 = gateCallbackIndex[_2];
  callbackIndex = (uint32) _3;
  _4 = gateCallbacks[callbackIndex].Update;
  _4 (clockName, 0);
  return;

}


Clock_Ip_DisableModuleClock (Clock_Ip_NameType clockName)
{
  uint32 callbackIndex;

  <bb 2> :
  _1 = clockFeatures[clockName][1];
  _2 = (int) _1;
  _3 = gateCallbackIndex[_2];
  callbackIndex = (uint32) _3;
  _4 = gateCallbacks[callbackIndex].Update;
  _4 (clockName, 1);
  return;

}


Clock_Ip_InstallNotificationsCallback (void (*Clock_Ip_NotificationsCallbackType) (Clock_Ip_ClockNotificationType, Clock_Ip_NameType) callback)
{
  <bb 2> :
  clockNotificationsCallback = callback;
  return;

}


Clock_Ip_PowerModeChangeNotification (power_modes_t powerMode, power_notification_t notification)
{
  <bb 2> :
  clockObjectsAreInitialized.17_1 = clockObjectsAreInitialized;
  _2 = ~clockObjectsAreInitialized.17_1;
  if (_2 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  ClockInitializeObjects ();
  clockObjectsAreInitialized = 1;

  <bb 4> :
  ClockPowerModeChangeNotification (powerMode, notification);
  return;

}


Clock_Ip_ClearClockMonitorStatus (Clock_Ip_NameType clockName)
{
  uint32 callbackIndex;

  <bb 2> :
  _1 = clockFeatures[clockName][1];
  _2 = (int) _1;
  _3 = cmuCallbackIndex[_2];
  callbackIndex = (uint32) _3;
  _4 = cmuCallbacks[callbackIndex].Clear;
  _4 (clockName);
  return;

}


Clock_Ip_GetClockMonitorStatus (Clock_Ip_NameType clockName)
{
  uint32 callbackIndex;
  Clock_Ip_CmuStatusType D.6270;

  <bb 2> :
  _1 = clockFeatures[clockName][1];
  _2 = (int) _1;
  _3 = cmuCallbackIndex[_2];
  callbackIndex = (uint32) _3;
  _4 = cmuCallbacks[callbackIndex].GetStatus;
  D.6270 = _4 (clockName);

  <bb 3> :
<L0>:
  return D.6270;

}


Clock_Ip_DisableClockMonitor (Clock_Ip_NameType clockName)
{
  uint32 callbackIndex;

  <bb 2> :
  _1 = clockFeatures[clockName][1];
  _2 = (int) _1;
  _3 = cmuCallbackIndex[_2];
  callbackIndex = (uint32) _3;
  _4 = cmuCallbacks[callbackIndex].Disable;
  _4 (clockName);
  return;

}


Clock_Ip_DistributePll ()
{
  uint32 callbackIndex;
  uint32 i;

  <bb 2> :
  clockConfig.3_1 = clockConfig;
  if (clockConfig.3_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 3> :
  i = 0;
  goto <bb 7>; [INV]

  <bb 4> :
  clockConfig.4_2 = clockConfig;
  _3 = clockConfig.4_2->selectors[i].value;
  _4 = sourceType_clockName[_3];
  if (_4 == 3)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 5> :
  clockConfig.5_5 = clockConfig;
  _6 = clockConfig.5_5->selectors[i].name;
  _7 = clockFeatures[_6][1];
  _8 = (int) _7;
  _9 = selectorCallbackIndex[_8];
  callbackIndex = (uint32) _9;
  _10 = selectorCallbacks[callbackIndex].Set;
  clockConfig.6_11 = clockConfig;
  _12 = &clockConfig.6_11->selectors[i];
  _10 (_12);

  <bb 6> :
  i = i + 1;

  <bb 7> :
  clockConfig.7_13 = clockConfig;
  _14 = clockConfig.7_13->selectorsCount;
  _15 = (long unsigned int) _14;
  if (i < _15)
    goto <bb 4>; [INV]
  else
    goto <bb 8>; [INV]

  <bb 8> :
  clockTreeIsConsumingPll.8_16 = clockTreeIsConsumingPll;
  if (clockTreeIsConsumingPll.8_16 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 16>; [INV]

  <bb 9> :
  i = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  clockConfig.9_17 = clockConfig;
  _18 = clockConfig.9_17->gates[i].name;
  _19 = clockFeatures[_18][1];
  _20 = (int) _19;
  _21 = gateCallbackIndex[_20];
  callbackIndex = (uint32) _21;
  _22 = gateCallbacks[callbackIndex].Set;
  clockConfig.10_23 = clockConfig;
  _24 = &clockConfig.10_23->gates[i];
  _22 (_24);
  i = i + 1;

  <bb 11> :
  clockConfig.11_25 = clockConfig;
  _26 = clockConfig.11_25->gatesCount;
  _27 = (long unsigned int) _26;
  if (i < _27)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  clockConfig.12_28 = clockConfig;
  _29 = &clockConfig.12_28->specificPeriphalConfiguration;
  SpecificPeripheralClockInitialization (_29);
  i = 0;
  goto <bb 14>; [INV]

  <bb 13> :
  clockConfig.13_30 = clockConfig;
  _31 = clockConfig.13_30->cmus[i].name;
  _32 = clockFeatures[_31][1];
  _33 = (int) _32;
  _34 = cmuCallbackIndex[_33];
  callbackIndex = (uint32) _34;
  _35 = cmuCallbacks[callbackIndex].Enable;
  clockConfig.14_36 = clockConfig;
  _37 = &clockConfig.14_36->cmus[i];
  _35 (_37);
  i = i + 1;

  <bb 14> :
  clockConfig.15_38 = clockConfig;
  _39 = clockConfig.15_38->cmusCount;
  _40 = (long unsigned int) _39;
  if (i < _40)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  clockConfig.16_41 = clockConfig;
  DisableSafeClock (clockConfig.16_41);

  <bb 16> :
  return;

}


Clock_Ip_GetPllStatus ()
{
  uint32 callbackIndex;
  uint32 i;
  clock_pll_status_t pllStatus;
  Clock_Ip_PllStatusType retValue;
  Clock_Ip_PllStatusType D.6262;

  <bb 2> :
  retValue = 2;
  i = 0;
  goto <bb 8>; [INV]

  <bb 3> :
  _1 = HwPllName[i];
  _2 = clockFeatures[_1][1];
  _3 = (int) _2;
  _4 = pllCallbackIndex[_3];
  callbackIndex = (uint32) _4;
  _5 = pllCallbacks[callbackIndex].Complete;
  _6 = HwPllName[i];
  pllStatus = _5 (_6);
  if (pllStatus == 1)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
  retValue = 1;
  goto <bb 9>; [INV]

  <bb 5> :
  if (pllStatus == 2)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 6> :
  retValue = 0;

  <bb 7> :
  i = i + 1;

  <bb 8> :
  if (i == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  D.6262 = retValue;

  <bb 10> :
<L7>:
  return D.6262;

}


Clock_Ip_InitClock (const struct Clock_Ip_ClockConfigType * config)
{
  uint32 i;
  uint32 callbackIndex;

  <bb 2> :
  clockConfig.1_1 = clockConfig;
  if (clockConfig.1_1 != 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 3> :
  i = 0;
  goto <bb 5>; [INV]

  <bb 4> :
  _2 = config->cmus[i].name;
  _3 = clockFeatures[_2][1];
  _4 = (int) _3;
  _5 = cmuCallbackIndex[_4];
  callbackIndex = (uint32) _5;
  _6 = cmuCallbacks[callbackIndex].Reset;
  _7 = &config->cmus[i];
  _6 (_7);
  i = i + 1;

  <bb 5> :
  _8 = config->cmusCount;
  _9 = (long unsigned int) _8;
  if (i < _9)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  clockConfig = config;
  SpecificPlatformInitClock (config);
  ResetClockConfiguration (config);
  i = 0;
  goto <bb 8>; [INV]

  <bb 7> :
  _10 = config->ircoscs[i].name;
  _11 = clockFeatures[_10][1];
  _12 = (int) _11;
  _13 = ircoscCallbackIndex[_12];
  callbackIndex = (uint32) _13;
  _14 = intOscCallbacks[callbackIndex].Set;
  _15 = &config->ircoscs[i];
  _14 (_15);
  i = i + 1;

  <bb 8> :
  _16 = config->ircoscsCount;
  _17 = (long unsigned int) _16;
  if (i < _17)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  i = 0;
  goto <bb 11>; [INV]

  <bb 10> :
  _18 = config->xoscs[i].name;
  _19 = clockFeatures[_18][1];
  _20 = (int) _19;
  _21 = xoscCallbackIndex[_20];
  callbackIndex = (uint32) _21;
  _22 = extOscCallbacks[callbackIndex].Set;
  _23 = &config->xoscs[i];
  _22 (_23);
  i = i + 1;

  <bb 11> :
  _24 = config->xoscsCount;
  _25 = (long unsigned int) _24;
  if (i < _25)
    goto <bb 10>; [INV]
  else
    goto <bb 12>; [INV]

  <bb 12> :
  UpdateDriverContext (config);
  i = 0;
  goto <bb 14>; [INV]

  <bb 13> :
  _26 = config->pcfs[i].name;
  _27 = clockFeatures[_26][1];
  _28 = (int) _27;
  _29 = pcfsCallbackIndex[_28];
  callbackIndex = (uint32) _29;
  _30 = pcfsCallbacks[callbackIndex].Set;
  _31 = &config->pcfs[i];
  _30 (_31);
  i = i + 1;

  <bb 14> :
  _32 = config->pcfsCount;
  _33 = (long unsigned int) _32;
  if (i < _33)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  i = 0;
  goto <bb 17>; [INV]

  <bb 16> :
  _34 = config->dividerTriggers[i].name;
  _35 = clockFeatures[_34][1];
  _36 = (int) _35;
  _37 = dividertriggerCallbackIndex[_36];
  callbackIndex = (uint32) _37;
  _38 = dividerTriggerCallbacks[callbackIndex].Configure;
  _39 = &config->dividerTriggers[i];
  _38 (_39);
  i = i + 1;

  <bb 17> :
  _40 = config->dividerTriggersCount;
  _41 = (long unsigned int) _40;
  if (i < _41)
    goto <bb 16>; [INV]
  else
    goto <bb 18>; [INV]

  <bb 18> :
  i = 0;
  goto <bb 20>; [INV]

  <bb 19> :
  _42 = config->dividers[i].name;
  _43 = clockFeatures[_42][1];
  _44 = (int) _43;
  _45 = dividerCallbackIndex[_44];
  callbackIndex = (uint32) _45;
  _46 = dividerCallbacks[callbackIndex].Set;
  _47 = &config->dividers[i];
  _46 (_47);
  i = i + 1;

  <bb 20> :
  _48 = config->dividersCount;
  _49 = (long unsigned int) _48;
  if (i < _49)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]

  <bb 21> :
  i = 0;
  goto <bb 23>; [INV]

  <bb 22> :
  _50 = config->dividerTriggers[i].name;
  _51 = clockFeatures[_50][1];
  _52 = (int) _51;
  _53 = dividertriggerCallbackIndex[_52];
  callbackIndex = (uint32) _53;
  _54 = dividerTriggerCallbacks[callbackIndex].TriggerUpdate;
  _55 = &config->dividerTriggers[i];
  _54 (_55);
  i = i + 1;

  <bb 23> :
  _56 = config->dividerTriggersCount;
  _57 = (long unsigned int) _56;
  if (i < _57)
    goto <bb 22>; [INV]
  else
    goto <bb 24>; [INV]

  <bb 24> :
  i = 0;
  goto <bb 26>; [INV]

  <bb 25> :
  _58 = config->plls[i].name;
  _59 = clockFeatures[_58][1];
  _60 = (int) _59;
  _61 = pllCallbackIndex[_60];
  callbackIndex = (uint32) _61;
  _62 = pllCallbacks[callbackIndex].Set;
  _63 = &config->plls[i];
  _62 (_63);
  i = i + 1;

  <bb 26> :
  _64 = config->pllsCount;
  _65 = (long unsigned int) _64;
  if (i < _65)
    goto <bb 25>; [INV]
  else
    goto <bb 27>; [INV]

  <bb 27> :
  i = 0;
  goto <bb 29>; [INV]

  <bb 28> :
  _66 = config->cmus[i].name;
  _67 = clockFeatures[_66][1];
  _68 = (int) _67;
  _69 = cmuCallbackIndex[_68];
  callbackIndex = (uint32) _69;
  _70 = cmuCallbacks[callbackIndex].Set;
  _71 = &config->cmus[i];
  _70 (_71);
  i = i + 1;

  <bb 29> :
  _72 = config->cmusCount;
  _73 = (long unsigned int) _72;
  if (i < _73)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]

  <bb 30> :
  i = 0;
  goto <bb 32>; [INV]

  <bb 31> :
  _74 = config->xoscs[i].name;
  _75 = clockFeatures[_74][1];
  _76 = (int) _75;
  _77 = xoscCallbackIndex[_76];
  callbackIndex = (uint32) _77;
  _78 = extOscCallbacks[callbackIndex].Complete;
  _79 = &config->xoscs[i];
  _78 (_79);
  i = i + 1;

  <bb 32> :
  _80 = config->xoscsCount;
  _81 = (long unsigned int) _80;
  if (i < _81)
    goto <bb 31>; [INV]
  else
    goto <bb 33>; [INV]

  <bb 33> :
  i = 0;
  goto <bb 35>; [INV]

  <bb 34> :
  _82 = config->plls[i].name;
  _83 = clockFeatures[_82][1];
  _84 = (int) _83;
  _85 = pllCallbackIndex[_84];
  callbackIndex = (uint32) _85;
  _86 = pllCallbacks[callbackIndex].Enable;
  _87 = &config->plls[i];
  _86 (_87);
  i = i + 1;

  <bb 35> :
  _88 = config->pllsCount;
  _89 = (long unsigned int) _88;
  if (i < _89)
    goto <bb 34>; [INV]
  else
    goto <bb 36>; [INV]

  <bb 36> :
  i = 0;
  goto <bb 38>; [INV]

  <bb 37> :
  _90 = config->fracDivs[i].name;
  _91 = clockFeatures[_90][1];
  _92 = (int) _91;
  _93 = fractional_dividerCallbackIndex[_92];
  callbackIndex = (uint32) _93;
  _94 = fracDivCallbacks[callbackIndex].Set;
  _95 = &config->fracDivs[i];
  _94 (_95);
  i = i + 1;

  <bb 38> :
  _96 = config->fracDivsCount;
  _97 = (long unsigned int) _96;
  if (i < _97)
    goto <bb 37>; [INV]
  else
    goto <bb 39>; [INV]

  <bb 39> :
  clockTreeIsConsumingPll = 0;
  i = 0;
  goto <bb 44>; [INV]

  <bb 40> :
  _98 = config->selectors[i].value;
  _99 = sourceType_clockName[_98];
  if (_99 != 3)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]

  <bb 41> :
  _100 = config->selectors[i].name;
  _101 = clockFeatures[_100][1];
  _102 = (int) _101;
  _103 = selectorCallbackIndex[_102];
  callbackIndex = (uint32) _103;
  _104 = selectorCallbacks[callbackIndex].Set;
  _105 = &config->selectors[i];
  _104 (_105);
  goto <bb 43>; [INV]

  <bb 42> :
  clockTreeIsConsumingPll = 1;

  <bb 43> :
  i = i + 1;

  <bb 44> :
  _106 = config->selectorsCount;
  _107 = (long unsigned int) _106;
  if (i < _107)
    goto <bb 40>; [INV]
  else
    goto <bb 45>; [INV]

  <bb 45> :
  clockTreeIsConsumingPll.2_108 = clockTreeIsConsumingPll;
  _109 = ~clockTreeIsConsumingPll.2_108;
  if (_109 != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 53>; [INV]

  <bb 46> :
  i = 0;
  goto <bb 48>; [INV]

  <bb 47> :
  _110 = config->gates[i].name;
  _111 = clockFeatures[_110][1];
  _112 = (int) _111;
  _113 = gateCallbackIndex[_112];
  callbackIndex = (uint32) _113;
  _114 = gateCallbacks[callbackIndex].Set;
  _115 = &config->gates[i];
  _114 (_115);
  i = i + 1;

  <bb 48> :
  _116 = config->gatesCount;
  _117 = (long unsigned int) _116;
  if (i < _117)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]

  <bb 49> :
  _118 = &config->specificPeriphalConfiguration;
  SpecificPeripheralClockInitialization (_118);
  i = 0;
  goto <bb 51>; [INV]

  <bb 50> :
  _119 = config->cmus[i].name;
  _120 = clockFeatures[_119][1];
  _121 = (int) _120;
  _122 = cmuCallbackIndex[_121];
  callbackIndex = (uint32) _122;
  _123 = cmuCallbacks[callbackIndex].Enable;
  _124 = &config->cmus[i];
  _123 (_124);
  i = i + 1;

  <bb 51> :
  _125 = config->cmusCount;
  _126 = (long unsigned int) _125;
  if (i < _126)
    goto <bb 50>; [INV]
  else
    goto <bb 52>; [INV]

  <bb 52> :
  DisableSafeClock (config);

  <bb 53> :
  return;

}


Clock_Ip_Init (const struct Clock_Ip_ClockConfigType * config)
{
  Clock_Ip_PllStatusType pllStatus;
  Clock_Ip_StatusType clockStatus;
  Clock_Ip_StatusType D.6248;

  <bb 2> :
  clockStatus = 1;
  Clock_Ip_InitClock (config);
  clockTreeIsConsumingPll.0_1 = clockTreeIsConsumingPll;
  if (clockTreeIsConsumingPll.0_1 != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 3> :
  pllStatus = Clock_Ip_GetPllStatus ();
  if (pllStatus == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 4> :
  Clock_Ip_DistributePll ();
  clockStatus = 0;
  goto <bb 6>; [INV]

  <bb 5> :
  clockStatus = 0;

  <bb 6> :
  D.6248 = clockStatus;

  <bb 7> :
<L5>:
  return D.6248;

}


